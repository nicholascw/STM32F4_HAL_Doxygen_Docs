.TH "src/stm32f4xx_hal_rtc_ex.c" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/stm32f4xx_hal_rtc_ex.c \- RTC HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Real Time Clock (RTC) Extension peripheral:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal\&.h'\fP
.br

.SH "详细描述"
.PP 
RTC HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Real Time Clock (RTC) Extension peripheral: 


.PP
\fB作者\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
RTC Time Stamp functions
.IP "\(bu" 2
RTC Tamper functions
.IP "\(bu" 2
RTC Wake-up functions
.IP "\(bu" 2
Extension Control functions
.IP "\(bu" 2
Extension RTC features functions
.PP
.RE
.PP
.PP
.nf
==============================================================================
                ##### How to use this driver #####
==============================================================================
[..]
  (+) Enable the RTC domain access.
  (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
      format using the HAL_RTC_Init() function.

*** RTC Wake-up configuration ***
================================
[..]
  (+) To configure the RTC Wake-up Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
      function. You can also configure the RTC Wake-up timer in interrupt mode
      using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  (+) To read the RTC Wake-up Counter register, use the HAL_RTCEx_GetWakeUpTimer()
      function.

*** TimeStamp configuration ***
===============================
[..]
  (+) Configure the RTC_AFx trigger and enable the RTC TimeStamp using the
      HAL_RTCEx_SetTimeStamp() function. You can also configure the RTC TimeStamp with
      interrupt mode using the HAL_RTCEx_SetTimeStamp_IT() function.
  (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
      function.
  (+) The TIMESTAMP alternate function can be mapped either to RTC_AF1 (PC13)
      or RTC_AF2 (PI8 or PA0 only for STM32F446xx devices) depending on the value of TSINSEL bit in
      RTC_TAFCR register. The corresponding pin is also selected by HAL_RTCEx_SetTimeStamp()
      or HAL_RTCEx_SetTimeStamp_IT() function.

*** Tamper configuration ***
============================
[..]
  (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
      or Level according to the Tamper filter (if equal to 0 Edge else Level)
      value, sampling frequency, precharge or discharge and Pull-UP using the
      HAL_RTCEx_SetTamper() function. You can configure RTC Tamper in interrupt
      mode using HAL_RTCEx_SetTamper_IT() function.
  (+) The TAMPER1 alternate function can be mapped either to RTC_AF1 (PC13)
      or RTC_AF2 (PI8 or PA0 only for STM32F446xx devices) depending on the value of TAMP1INSEL bit in
      RTC_TAFCR register. The corresponding pin is also selected by HAL_RTCEx_SetTamper()
      or HAL_RTCEx_SetTamper_IT() function.

*** Backup Data Registers configuration ***
===========================================
[..]
  (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
      function.
  (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
      function..fi
.PP
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_rtc_ex\&.c\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
