.TH "UTILS_EF_SYSTEM" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UTILS_EF_SYSTEM \- System Configuration functions  

.SH SYNOPSIS
.br
.PP
.SS "函数"

.in +1c
.ti -1c
.RI "void \fBLL_SetSystemCoreClock\fP (uint32_t HCLKFrequency)"
.br
.RI "This function sets directly SystemCoreClock CMSIS variable\&. "
.ti -1c
.RI "ErrorStatus \fBLL_PLL_ConfigSystemClock_HSI\fP (\fBLL_UTILS_PLLInitTypeDef\fP *UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP *UTILS_ClkInitStruct)"
.br
.RI "This function configures system clock at maximum frequency with HSI as clock source of the PLL "
.ti -1c
.RI "ErrorStatus \fBLL_PLL_ConfigSystemClock_HSE\fP (uint32_t HSEFrequency, uint32_t HSEBypass, \fBLL_UTILS_PLLInitTypeDef\fP *UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP *UTILS_ClkInitStruct)"
.br
.RI "This function configures system clock with HSE as clock source of the PLL "
.in -1c
.SH "详细描述"
.PP 
System Configuration functions 


.PP
.nf
===============================================================================
          ##### System Configuration functions #####
===============================================================================
   [..]
        System, AHB and APB buses clocks configuration

        (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 180000000 Hz.
.fi
.PP
 Depending on the device voltage range, the maximum frequency should be adapted accordingly to the Refenece manual\&. 
.SH "函数说明"
.PP 
.SS "ErrorStatus LL_PLL_ConfigSystemClock_HSE (uint32_t HSEFrequency, uint32_t HSEBypass, \fBLL_UTILS_PLLInitTypeDef\fP * UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP * UTILS_ClkInitStruct)"

.PP
This function configures system clock with HSE as clock source of the PLL 
.PP
\fB注解\fP
.RS 4
The application need to ensure that PLL is disabled\&.
.IP "\(bu" 2
PLL output frequency = (((HSI frequency / PLLM) * PLLN) / PLLP)
.IP "\(bu" 2
PLLM: ensure that the VCO input frequency ranges from \fBRCC_PLLVCO_INPUT_MIN\fP to \fBRCC_PLLVCO_INPUT_MAX\fP (PLLVCO_input = HSI frequency / PLLM)
.IP "\(bu" 2
PLLN: ensure that the VCO output frequency is between \fBRCC_PLLVCO_OUTPUT_MIN\fP and \fBRCC_PLLVCO_OUTPUT_MAX\fP (PLLVCO_output = PLLVCO_input * PLLN)
.IP "\(bu" 2
PLLP: ensure that max frequency at 180000000 Hz is reach (PLLVCO_output / PLLP) 
.PP
.RE
.PP
\fB参数\fP
.RS 4
\fIHSEFrequency\fP Value between Min_Data = 4000000 and Max_Data = 26000000 
.br
\fIHSEBypass\fP This parameter can be one of the following values: 
.PD 0

.IP "\(bu" 2
\fBLL_UTILS_HSEBYPASS_ON\fP 
.IP "\(bu" 2
\fBLL_UTILS_HSEBYPASS_OFF\fP 
.PP
.br
\fIUTILS_PLLInitStruct\fP pointer to a \fBLL_UTILS_PLLInitTypeDef\fP structure that contains the configuration information for the PLL\&. 
.br
\fIUTILS_ClkInitStruct\fP pointer to a \fBLL_UTILS_ClkInitTypeDef\fP structure that contains the configuration information for the BUS prescalers\&. 
.RE
.PP
\fB返回值\fP
.RS 4
\fIAn\fP ErrorStatus enumeration value:
.IP "\(bu" 2
SUCCESS: Max frequency configuration done
.IP "\(bu" 2
ERROR: Max frequency configuration not done 
.PP
.RE
.PP

.PP
在文件 stm32f4xx_ll_utils\&.c 第 404 行定义\&.
.SS "ErrorStatus LL_PLL_ConfigSystemClock_HSI (\fBLL_UTILS_PLLInitTypeDef\fP * UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP * UTILS_ClkInitStruct)"

.PP
This function configures system clock at maximum frequency with HSI as clock source of the PLL 
.PP
\fB注解\fP
.RS 4
The application need to ensure that PLL is disabled\&. 
.PP
Function is based on the following formula:
.IP "\(bu" 2
PLL output frequency = (((HSI frequency / PLLM) * PLLN) / PLLP)
.IP "\(bu" 2
PLLM: ensure that the VCO input frequency ranges from \fBRCC_PLLVCO_INPUT_MIN\fP to \fBRCC_PLLVCO_INPUT_MAX\fP (PLLVCO_input = HSI frequency / PLLM)
.IP "\(bu" 2
PLLN: ensure that the VCO output frequency is between \fBRCC_PLLVCO_OUTPUT_MIN\fP and \fBRCC_PLLVCO_OUTPUT_MAX\fP (PLLVCO_output = PLLVCO_input * PLLN)
.IP "\(bu" 2
PLLP: ensure that max frequency at 180000000 Hz is reach (PLLVCO_output / PLLP) 
.PP
.RE
.PP
\fB参数\fP
.RS 4
\fIUTILS_PLLInitStruct\fP pointer to a \fBLL_UTILS_PLLInitTypeDef\fP structure that contains the configuration information for the PLL\&. 
.br
\fIUTILS_ClkInitStruct\fP pointer to a \fBLL_UTILS_ClkInitTypeDef\fP structure that contains the configuration information for the BUS prescalers\&. 
.RE
.PP
\fB返回值\fP
.RS 4
\fIAn\fP ErrorStatus enumeration value:
.IP "\(bu" 2
SUCCESS: Max frequency configuration done
.IP "\(bu" 2
ERROR: Max frequency configuration not done 
.PP
.RE
.PP

.PP
在文件 stm32f4xx_ll_utils\&.c 第 347 行定义\&.
.SS "void LL_SetSystemCoreClock (uint32_t HCLKFrequency)"

.PP
This function sets directly SystemCoreClock CMSIS variable\&. 
.PP
\fB注解\fP
.RS 4
Variable can be calculated also through SystemCoreClockUpdate function\&. 
.RE
.PP
\fB参数\fP
.RS 4
\fIHCLKFrequency\fP HCLK frequency in Hz (can be calculated thanks to RCC helper macro) 
.RE
.PP
\fB返回值\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
在文件 stm32f4xx_ll_utils\&.c 第 325 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
