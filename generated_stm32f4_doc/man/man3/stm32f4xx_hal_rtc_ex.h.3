.TH "inc/stm32f4xx_hal_rtc_ex.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_rtc_ex.h \- Header file of RTC HAL Extension module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBRTC_TamperTypeDef\fP"
.br
.RI "RTC Tamper structure definition 
.br
 "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBRTC_BKP_DR0\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR1\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR2\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR3\fP   0x00000003U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR4\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR5\fP   0x00000005U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR6\fP   0x00000006U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR7\fP   0x00000007U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR8\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR9\fP   0x00000009U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR10\fP   0x0000000AU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR11\fP   0x0000000BU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR12\fP   0x0000000CU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR13\fP   0x0000000DU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR14\fP   0x0000000EU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR15\fP   0x0000000FU"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR16\fP   0x00000010U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR17\fP   0x00000011U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR18\fP   0x00000012U"
.br
.ti -1c
.RI "#define \fBRTC_BKP_DR19\fP   0x00000013U"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPEDGE_RISING\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPEDGE_FALLING\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPER_1\fP   RTC_TAFCR_TAMP1E"
.br
.ti -1c
.RI "#define \fBRTC_TAMPER_2\fP   RTC_TAFCR_TAMP2E"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPIN_DEFAULT\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPIN_POS1\fP   0x00010000U"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPPIN_DEFAULT\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPPIN_POS1\fP   0x00020000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERTRIGGER_RISINGEDGE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERTRIGGER_FALLINGEDGE\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERTRIGGER_LOWLEVEL\fP   \fBRTC_TAMPERTRIGGER_RISINGEDGE\fP"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERTRIGGER_HIGHLEVEL\fP   \fBRTC_TAMPERTRIGGER_FALLINGEDGE\fP"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERFILTER_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERFILTER_2SAMPLE\fP   0x00000800U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERFILTER_4SAMPLE\fP   0x00001000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERFILTER_8SAMPLE\fP   0x00001800U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV32768\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV16384\fP   0x00000100U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV8192\fP   0x00000200U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV4096\fP   0x00000300U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV2048\fP   0x00000400U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV1024\fP   0x00000500U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV512\fP   0x00000600U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERSAMPLINGFREQ_RTCCLK_DIV256\fP   0x00000700U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPRECHARGEDURATION_1RTCCLK\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPRECHARGEDURATION_2RTCCLK\fP   0x00002000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPRECHARGEDURATION_4RTCCLK\fP   0x00004000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPERPRECHARGEDURATION_8RTCCLK\fP   0x00006000U"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPONTAMPERDETECTION_ENABLE\fP   ((uint32_t)RTC_TAFCR_TAMPTS)"
.br
.ti -1c
.RI "#define \fBRTC_TIMESTAMPONTAMPERDETECTION_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPER_PULLUP_ENABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_TAMPER_PULLUP_DISABLE\fP   ((uint32_t)RTC_TAFCR_TAMPPUDIS)"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_RTCCLK_DIV16\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_RTCCLK_DIV8\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_RTCCLK_DIV4\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_RTCCLK_DIV2\fP   0x00000003U"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_CK_SPRE_16BITS\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBRTC_WAKEUPCLOCK_CK_SPRE_17BITS\fP   0x00000006U"
.br
.ti -1c
.RI "#define \fBRTC_CALIBSIGN_POSITIVE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_CALIBSIGN_NEGATIVE\fP   0x00000080U"
.br
.ti -1c
.RI "#define \fBRTC_SMOOTHCALIB_PERIOD_32SEC\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_SMOOTHCALIB_PERIOD_16SEC\fP   0x00002000U"
.br
.ti -1c
.RI "#define \fBRTC_SMOOTHCALIB_PERIOD_8SEC\fP   0x00004000U"
.br
.ti -1c
.RI "#define \fBRTC_SMOOTHCALIB_PLUSPULSES_SET\fP   0x00008000U"
.br
.ti -1c
.RI "#define \fBRTC_SMOOTHCALIB_PLUSPULSES_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_SHIFTADD1S_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_SHIFTADD1S_SET\fP   0x80000000U"
.br
.ti -1c
.RI "#define \fBRTC_CALIBOUTPUT_512HZ\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_CALIBOUTPUT_1HZ\fP   0x00080000U"
.br
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_WUTE))"
.br
.RI "Enable the RTC WakeUp Timer peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_WUTE))"
.br
.RI "Disable the RTC Wake-up Timer peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_ENABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR |= (__INTERRUPT__))"
.br
.RI "Enable the RTC WakeUpTimer interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_DISABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR &= ~(__INTERRUPT__))"
.br
.RI "Disable the RTC WakeUpTimer interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_GET_IT\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->ISR) & ((__INTERRUPT__)>> 4U)) != RESET)? SET : RESET)"
.br
.RI "Check whether the specified RTC WakeUpTimer interrupt has occurred or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->CR) & (__INTERRUPT__)) != RESET) ? SET : RESET)"
.br
.RI "Check whether the specified RTC Wake Up timer interrupt has been enabled or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((((__HANDLE__)\->Instance\->ISR) & (__FLAG__)) != RESET)? SET : RESET)"
.br
.RI "Get the selected RTC WakeUpTimer's flag status\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->ISR) = (~((__FLAG__) | RTC_ISR_INIT)|((__HANDLE__)\->Instance\->ISR & RTC_ISR_INIT))"
.br
.RI "Clear the RTC Wake Up timer's pending flags\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT\fP()   (EXTI\->IMR |= \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Enable interrupt on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_IT\fP()   (EXTI\->IMR &= ~(\fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP))"
.br
.RI "Disable interrupt on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_EVENT\fP()   (EXTI\->EMR |= \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Enable event on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_EVENT\fP()   (EXTI\->EMR &= ~(\fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP))"
.br
.RI "Disable event on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_FALLING_EDGE\fP()   (EXTI\->FTSR |= \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Enable falling edge trigger on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_FALLING_EDGE\fP()   (EXTI\->FTSR &= ~(\fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP))"
.br
.RI "Disable falling edge trigger on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE\fP()   (EXTI\->RTSR |= \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Enable rising edge trigger on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_RISING_EDGE\fP()   (EXTI\->RTSR &= ~(\fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP))"
.br
.RI "Disable rising edge trigger on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Enable rising & falling edge trigger on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Disable rising & falling edge trigger on the RTC Wake-up Timer associated Exti line\&. This parameter can be: "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_GET_FLAG\fP()   (EXTI\->PR & \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Check whether the RTC Wake-up Timer associated Exti line interrupt flag is set or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG\fP()   (EXTI\->PR = \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Clear the RTC Wake-up Timer associated Exti line flag\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WAKEUPTIMER_EXTI_GENERATE_SWIT\fP()   (EXTI\->SWIER |= \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP)"
.br
.RI "Generate a Software interrupt on the RTC Wake-up Timer associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_TSE))"
.br
.RI "Enable the RTC TimeStamp peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_TSE))"
.br
.RI "Disable the RTC TimeStamp peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_ENABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR |= (__INTERRUPT__))"
.br
.RI "Enable the RTC TimeStamp interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_DISABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR &= ~(__INTERRUPT__))"
.br
.RI "Disable the RTC TimeStamp interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_GET_IT\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->ISR) & ((__INTERRUPT__)>> 4U)) != RESET)? SET : RESET)"
.br
.RI "Check whether the specified RTC TimeStamp interrupt has occurred or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->CR) & (__INTERRUPT__)) != RESET) ? SET : RESET)"
.br
.RI "Check whether the specified RTC Time Stamp interrupt has been enabled or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((((__HANDLE__)\->Instance\->ISR) & (__FLAG__)) != RESET)? SET : RESET)"
.br
.RI "Get the selected RTC TimeStamp's flag status\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TIMESTAMP_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->ISR) = (~((__FLAG__) | RTC_ISR_INIT)|((__HANDLE__)\->Instance\->ISR & RTC_ISR_INIT))"
.br
.RI "Clear the RTC Time Stamp's pending flags\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER1_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->TAFCR |= (RTC_TAFCR_TAMP1E))"
.br
.RI "Enable the RTC Tamper1 input detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER1_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->TAFCR &= ~(RTC_TAFCR_TAMP1E))"
.br
.RI "Disable the RTC Tamper1 input detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER2_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->TAFCR |= (RTC_TAFCR_TAMP2E))"
.br
.RI "Enable the RTC Tamper2 input detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER2_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->TAFCR &= ~(RTC_TAFCR_TAMP2E))"
.br
.RI "Disable the RTC Tamper2 input detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_GET_IT\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->ISR) & ((__INTERRUPT__)>> 4U)) != RESET)? SET : RESET)"
.br
.RI "Check whether the specified RTC Tamper interrupt has occurred or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->TAFCR) & (__INTERRUPT__)) != RESET) ? SET : RESET)"
.br
.RI "Check whether the specified RTC Tamper interrupt has been enabled or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((((__HANDLE__)\->Instance\->ISR) & (__FLAG__)) != RESET)? SET : RESET)"
.br
.RI "Get the selected RTC Tamper's flag status\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->ISR) = (~((__FLAG__) | RTC_ISR_INIT)|((__HANDLE__)\->Instance\->ISR & RTC_ISR_INIT))"
.br
.RI "Clear the RTC Tamper's pending flags\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT\fP()   (EXTI\->IMR |= \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Enable interrupt on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_IT\fP()   (EXTI\->IMR &= ~(\fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP))"
.br
.RI "Disable interrupt on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_EVENT\fP()   (EXTI\->EMR |= \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Enable event on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_EVENT\fP()   (EXTI\->EMR &= ~(\fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP))"
.br
.RI "Disable event on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_FALLING_EDGE\fP()   (EXTI\->FTSR |= \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Enable falling edge trigger on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_FALLING_EDGE\fP()   (EXTI\->FTSR &= ~(\fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP))"
.br
.RI "Disable falling edge trigger on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE\fP()   (EXTI\->RTSR |= \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Enable rising edge trigger on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_RISING_EDGE\fP()   (EXTI\->RTSR &= ~(\fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP))"
.br
.RI "Disable rising edge trigger on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Enable rising & falling edge trigger on the RTC Tamper and Timestamp associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Disable rising & falling edge trigger on the RTC Tamper and Timestamp associated Exti line\&. This parameter can be: "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_GET_FLAG\fP()   (EXTI\->PR & \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Check whether the RTC Tamper and Timestamp associated Exti line interrupt flag is set or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG\fP()   (EXTI\->PR = \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Clear the RTC Tamper and Timestamp associated Exti line flag\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_TAMPER_TIMESTAMP_EXTI_GENERATE_SWIT\fP()   (EXTI\->SWIER |= \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP)"
.br
.RI "Generate a Software interrupt on the RTC Tamper and Timestamp associated Exti line "
.ti -1c
.RI "#define \fB__HAL_RTC_COARSE_CALIB_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_DCE))"
.br
.RI "Enable the Coarse calibration process\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_COARSE_CALIB_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_DCE))"
.br
.RI "Disable the Coarse calibration process\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_CALIBRATION_OUTPUT_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_COE))"
.br
.RI "Enable the RTC calibration output\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_CALIBRATION_OUTPUT_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_COE))"
.br
.RI "Disable the calibration output\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_CLOCKREF_DETECTION_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_REFCKON))"
.br
.RI "Enable the clock reference detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_CLOCKREF_DETECTION_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_REFCKON))"
.br
.RI "Disable the clock reference detection\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_SHIFT_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((((__HANDLE__)\->Instance\->ISR) & (__FLAG__)) != RESET)? SET : RESET)"
.br
.RI "Get the selected RTC shift operation's flag status\&. "
.ti -1c
.RI "#define \fBRTC_EXTI_LINE_TAMPER_TIMESTAMP_EVENT\fP   ((uint32_t)EXTI_IMR_MR21)"
.br
.ti -1c
.RI "#define \fBRTC_EXTI_LINE_WAKEUPTIMER_EVENT\fP   ((uint32_t)EXTI_IMR_MR22)"
.br
.ti -1c
.RI "#define \fBIS_RTC_BKP\fP(BKP)"
.br
.ti -1c
.RI "#define \fBIS_TIMESTAMP_EDGE\fP(EDGE)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER\fP(TAMPER)   ((((TAMPER) & ((uint32_t)!(RTC_TAFCR_TAMP1E | RTC_TAFCR_TAMP2E))) == 0x00U) && ((TAMPER) != (uint32_t)RESET))"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_PIN\fP(PIN)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TIMESTAMP_PIN\fP(PIN)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_TRIGGER\fP(TRIGGER)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_FILTER\fP(FILTER)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_SAMPLING_FREQ\fP(FREQ)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_PRECHARGE_DURATION\fP(DURATION)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION\fP(DETECTION)"
.br
.ti -1c
.RI "#define \fBIS_RTC_TAMPER_PULLUP_STATE\fP(STATE)"
.br
.ti -1c
.RI "#define \fBIS_RTC_WAKEUP_CLOCK\fP(CLOCK)"
.br
.ti -1c
.RI "#define \fBIS_RTC_WAKEUP_COUNTER\fP(COUNTER)   ((COUNTER) <= 0xFFFFU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_CALIB_SIGN\fP(SIGN)"
.br
.ti -1c
.RI "#define \fBIS_RTC_CALIB_VALUE\fP(VALUE)   ((VALUE) < 0x20U)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SMOOTH_CALIB_PERIOD\fP(PERIOD)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SMOOTH_CALIB_PLUS\fP(PLUS)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SMOOTH_CALIB_MINUS\fP(VALUE)   ((VALUE) <= 0x000001FFU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SHIFT_ADD1S\fP(SEL)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SHIFT_SUBFS\fP(FS)   ((FS) <= 0x00007FFFU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_CALIB_OUTPUT\fP(OUTPUT)"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetTimeStamp\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t TimeStampEdge, uint32_t RTC_TimeStampPin)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetTimeStamp_IT\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t TimeStampEdge, uint32_t RTC_TimeStampPin)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DeactivateTimeStamp\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_GetTimeStamp\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_TimeTypeDef\fP *sTimeStamp, \fBRTC_DateTypeDef\fP *sTimeStampDate, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetTamper\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_TamperTypeDef\fP *sTamper)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetTamper_IT\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_TamperTypeDef\fP *sTamper)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DeactivateTamper\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Tamper)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_TamperTimeStampIRQHandler\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_Tamper1EventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_Tamper2EventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_TimeStampEventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_PollForTimeStampEvent\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_PollForTamper1Event\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_PollForTamper2Event\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetWakeUpTimer\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t WakeUpCounter, uint32_t WakeUpClock)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetWakeUpTimer_IT\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t WakeUpCounter, uint32_t WakeUpClock)"
.br
.ti -1c
.RI "uint32_t \fBHAL_RTCEx_DeactivateWakeUpTimer\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "uint32_t \fBHAL_RTCEx_GetWakeUpTimer\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_WakeUpTimerIRQHandler\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_WakeUpTimerEventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.RI "Wake Up Timer Event Callback in non blocking mode "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_PollForWakeUpTimerEvent\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_BKUPWrite\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t BackupRegister, uint32_t Data)"
.br
.ti -1c
.RI "uint32_t \fBHAL_RTCEx_BKUPRead\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t BackupRegister)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetCoarseCalib\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t CalibSign, uint32_t Value)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DeactivateCoarseCalib\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetSmoothCalib\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t SmoothCalibPeriod, uint32_t SmoothCalibPlusPulses, uint32_t SmouthCalibMinusPulsesValue)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetSynchroShift\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t ShiftAdd1S, uint32_t ShiftSubFS)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetCalibrationOutPut\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t CalibOutput)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DeactivateCalibrationOutPut\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_SetRefClock\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DeactivateRefClock\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_EnableBypassShadow\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_DisableBypassShadow\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTCEx_AlarmBEventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTCEx_PollForAlarmBEvent\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of RTC HAL Extension module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_rtc_ex\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
