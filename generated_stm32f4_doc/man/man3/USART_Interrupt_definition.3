.TH "USART_Interrupt_definition" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
USART_Interrupt_definition \- Elements values convention: 0xY000XXXX  

.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBUSART_IT_PE\fP   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_PEIE))"
.br
.ti -1c
.RI "#define \fBUSART_IT_TXE\fP   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_TXEIE))"
.br
.ti -1c
.RI "#define \fBUSART_IT_TC\fP   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_TCIE))"
.br
.ti -1c
.RI "#define \fBUSART_IT_RXNE\fP   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_RXNEIE))"
.br
.ti -1c
.RI "#define \fBUSART_IT_IDLE\fP   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_IDLEIE))"
.br
.ti -1c
.RI "#define \fBUSART_IT_ERR\fP   ((uint32_t)(\fBUSART_CR3_REG_INDEX\fP << 28U | USART_CR3_EIE))"
.br
.in -1c
.SH "详细描述"
.PP 
Elements values convention: 0xY000XXXX 


.IP "\(bu" 2
XXXX : Interrupt mask in the XX register
.IP "\(bu" 2
Y : Interrupt source register (2bits)
.IP "  \(bu" 4
01: CR1 register
.IP "  \(bu" 4
10: CR2 register
.IP "  \(bu" 4
11: CR3 register 
.PP

.PP

.SH "宏定义说明"
.PP 
.SS "#define USART_IT_ERR   ((uint32_t)(\fBUSART_CR3_REG_INDEX\fP << 28U | USART_CR3_EIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 311 行定义\&.
.SS "#define USART_IT_IDLE   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_IDLEIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 310 行定义\&.
.SS "#define USART_IT_PE   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_PEIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 306 行定义\&.
.SS "#define USART_IT_RXNE   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_RXNEIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 309 行定义\&.
.SS "#define USART_IT_TC   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_TCIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 308 行定义\&.
.SS "#define USART_IT_TXE   ((uint32_t)(\fBUSART_CR1_REG_INDEX\fP << 28U | USART_CR1_TXEIE))"

.PP
在文件 stm32f4xx_hal_usart\&.h 第 307 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
