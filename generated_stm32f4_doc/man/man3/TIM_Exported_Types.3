.TH "TIM_Exported_Types" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TIM_Exported_Types
.SH SYNOPSIS
.br
.PP
.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBTIM_Base_InitTypeDef\fP"
.br
.RI "TIM Time base Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_OC_InitTypeDef\fP"
.br
.RI "TIM Output Compare Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_OnePulse_InitTypeDef\fP"
.br
.RI "TIM One Pulse Mode Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_IC_InitTypeDef\fP"
.br
.RI "TIM Input Capture Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_Encoder_InitTypeDef\fP"
.br
.RI "TIM Encoder Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_ClockConfigTypeDef\fP"
.br
.RI "Clock Configuration Handle Structure definition "
.ti -1c
.RI "struct \fBTIM_ClearInputConfigTypeDef\fP"
.br
.RI "TIM Clear Input Configuration Handle Structure definition "
.ti -1c
.RI "struct \fBTIM_MasterConfigTypeDef\fP"
.br
.RI "TIM Master configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_SlaveConfigTypeDef\fP"
.br
.RI "TIM Slave configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_BreakDeadTimeConfigTypeDef\fP"
.br
.RI "TIM Break input(s) and Dead time configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_HandleTypeDef\fP"
.br
.RI "TIM Time Base Handle Structure definition "
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBHAL_TIM_StateTypeDef\fP { \fBHAL_TIM_STATE_RESET\fP = 0x00U, \fBHAL_TIM_STATE_READY\fP = 0x01U, \fBHAL_TIM_STATE_BUSY\fP = 0x02U, \fBHAL_TIM_STATE_TIMEOUT\fP = 0x03U, \fBHAL_TIM_STATE_ERROR\fP = 0x04U }"
.br
.RI "HAL State structures definition "
.ti -1c
.RI "enum \fBHAL_TIM_ActiveChannel\fP { \fBHAL_TIM_ACTIVE_CHANNEL_1\fP = 0x01U, \fBHAL_TIM_ACTIVE_CHANNEL_2\fP = 0x02U, \fBHAL_TIM_ACTIVE_CHANNEL_3\fP = 0x04U, \fBHAL_TIM_ACTIVE_CHANNEL_4\fP = 0x08U, \fBHAL_TIM_ACTIVE_CHANNEL_CLEARED\fP = 0x00U }"
.br
.RI "HAL Active channel structures definition "
.in -1c
.SH "详细描述"
.PP 

.SH "枚举类型说明"
.PP 
.SS "enum \fBHAL_TIM_ActiveChannel\fP"

.PP
HAL Active channel structures definition 
.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIHAL_TIM_ACTIVE_CHANNEL_1 \fP\fP
The active channel is 1 
.br
 
.TP
\fB\fIHAL_TIM_ACTIVE_CHANNEL_2 \fP\fP
The active channel is 2 
.br
 
.TP
\fB\fIHAL_TIM_ACTIVE_CHANNEL_3 \fP\fP
The active channel is 3 
.br
 
.TP
\fB\fIHAL_TIM_ACTIVE_CHANNEL_4 \fP\fP
The active channel is 4 
.br
 
.TP
\fB\fIHAL_TIM_ACTIVE_CHANNEL_CLEARED \fP\fP
All active channels cleared 
.PP
在文件 stm32f4xx_hal_tim\&.h 第 295 行定义\&.
.SS "enum \fBHAL_TIM_StateTypeDef\fP"

.PP
HAL State structures definition 
.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIHAL_TIM_STATE_RESET \fP\fP
Peripheral not yet initialized or disabled 
.br
 
.TP
\fB\fIHAL_TIM_STATE_READY \fP\fP
Peripheral Initialized and ready for use 
.br
 
.TP
\fB\fIHAL_TIM_STATE_BUSY \fP\fP
An internal process is ongoing 
.br
 
.TP
\fB\fIHAL_TIM_STATE_TIMEOUT \fP\fP
Timeout state 
.br
 
.TP
\fB\fIHAL_TIM_STATE_ERROR \fP\fP
Reception process is ongoing 
.br
 
.PP
在文件 stm32f4xx_hal_tim\&.h 第 283 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
