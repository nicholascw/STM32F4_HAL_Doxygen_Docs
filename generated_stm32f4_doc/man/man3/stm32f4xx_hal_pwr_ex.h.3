.TH "inc/stm32f4xx_hal_pwr_ex.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_pwr_ex.h \- Header file of PWR HAL Extension module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBPWR_REGULATOR_VOLTAGE_SCALE1\fP"
.br
.ti -1c
.RI "#define \fBPWR_REGULATOR_VOLTAGE_SCALE2\fP"
.br
.ti -1c
.RI "#define \fBPWR_REGULATOR_VOLTAGE_SCALE3\fP   PWR_CR_VOS_0           /* Scale 3 mode: the maximum value of fHCLK is 120 MHz\&. */"
.br
.ti -1c
.RI "#define \fB__HAL_PWR_VOLTAGESCALING_CONFIG\fP(__REGULATOR__)"
.br
.RI "macros configure the main internal regulator output voltage\&. "
.ti -1c
.RI "#define \fBFPDS_BIT_NUMBER\fP   PWR_CR_FPDS_Pos"
.br
.ti -1c
.RI "#define \fBCR_FPDS_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CR_OFFSET_BB\fP * 32U) + (\fBFPDS_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBODEN_BIT_NUMBER\fP   PWR_CR_ODEN_Pos"
.br
.ti -1c
.RI "#define \fBCR_ODEN_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CR_OFFSET_BB\fP * 32U) + (\fBODEN_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBODSWEN_BIT_NUMBER\fP   PWR_CR_ODSWEN_Pos"
.br
.ti -1c
.RI "#define \fBCR_ODSWEN_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CR_OFFSET_BB\fP * 32U) + (\fBODSWEN_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBMRLVDS_BIT_NUMBER\fP   PWR_CR_MRLVDS_Pos"
.br
.ti -1c
.RI "#define \fBCR_MRLVDS_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CR_OFFSET_BB\fP * 32U) + (\fBMRLVDS_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBLPLVDS_BIT_NUMBER\fP   PWR_CR_LPLVDS_Pos"
.br
.ti -1c
.RI "#define \fBCR_LPLVDS_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CR_OFFSET_BB\fP * 32U) + (\fBLPLVDS_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBBRE_BIT_NUMBER\fP   PWR_CSR_BRE_Pos"
.br
.ti -1c
.RI "#define \fBCSR_BRE_BB\fP   (uint32_t)(PERIPH_BB_BASE + (\fBPWR_CSR_OFFSET_BB\fP * 32U) + (\fBBRE_BIT_NUMBER\fP * 4U))"
.br
.ti -1c
.RI "#define \fBIS_PWR_VOLTAGE_SCALING_RANGE\fP(VOLTAGE)"
.br
.ti -1c
.RI "#define \fBIS_PWR_WAKEUP_PIN\fP(PIN)   ((PIN) == \fBPWR_WAKEUP_PIN1\fP)"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "void \fBHAL_PWREx_EnableFlashPowerDown\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_PWREx_DisableFlashPowerDown\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_PWREx_EnableBkUpReg\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_PWREx_DisableBkUpReg\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_PWREx_GetVoltageRange\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_PWREx_ControlVoltageScaling\fP (uint32_t VoltageScaling)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of PWR HAL Extension module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_pwr_ex\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
