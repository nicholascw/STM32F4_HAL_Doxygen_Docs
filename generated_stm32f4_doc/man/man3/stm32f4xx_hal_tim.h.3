.TH "inc/stm32f4xx_hal_tim.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_tim.h \- Header file of TIM HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br
\fC#include 'stm32f4xx_hal_tim_ex\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBTIM_Base_InitTypeDef\fP"
.br
.RI "TIM Time base Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_OC_InitTypeDef\fP"
.br
.RI "TIM Output Compare Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_OnePulse_InitTypeDef\fP"
.br
.RI "TIM One Pulse Mode Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_IC_InitTypeDef\fP"
.br
.RI "TIM Input Capture Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_Encoder_InitTypeDef\fP"
.br
.RI "TIM Encoder Configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_ClockConfigTypeDef\fP"
.br
.RI "Clock Configuration Handle Structure definition "
.ti -1c
.RI "struct \fBTIM_ClearInputConfigTypeDef\fP"
.br
.RI "TIM Clear Input Configuration Handle Structure definition "
.ti -1c
.RI "struct \fBTIM_MasterConfigTypeDef\fP"
.br
.RI "TIM Master configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_SlaveConfigTypeDef\fP"
.br
.RI "TIM Slave configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_BreakDeadTimeConfigTypeDef\fP"
.br
.RI "TIM Break input(s) and Dead time configuration Structure definition "
.ti -1c
.RI "struct \fBTIM_HandleTypeDef\fP"
.br
.RI "TIM Time Base Handle Structure definition "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBTIM_CLEARINPUTSOURCE_NONE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTSOURCE_ETR\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CR1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CR2\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_SMCR\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_DIER\fP   0x00000003U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_SR\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_EGR\fP   0x00000005U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCMR1\fP   0x00000006U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCMR2\fP   0x00000007U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCER\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CNT\fP   0x00000009U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_PSC\fP   0x0000000AU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_ARR\fP   0x0000000BU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_RCR\fP   0x0000000CU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCR1\fP   0x0000000DU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCR2\fP   0x0000000EU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCR3\fP   0x0000000FU"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_CCR4\fP   0x00000010U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_BDTR\fP   0x00000011U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_DCR\fP   0x00000012U"
.br
.ti -1c
.RI "#define \fBTIM_DMABASE_DMAR\fP   0x00000013U"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_UPDATE\fP   TIM_EGR_UG"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_CC1\fP   TIM_EGR_CC1G"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_CC2\fP   TIM_EGR_CC2G"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_CC3\fP   TIM_EGR_CC3G"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_CC4\fP   TIM_EGR_CC4G"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_COM\fP   TIM_EGR_COMG"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_TRIGGER\fP   TIM_EGR_TG"
.br
.ti -1c
.RI "#define \fBTIM_EVENTSOURCE_BREAK\fP   TIM_EGR_BG"
.br
.ti -1c
.RI "#define \fBTIM_INPUTCHANNELPOLARITY_RISING\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_INPUTCHANNELPOLARITY_FALLING\fP   TIM_CCER_CC1P"
.br
.ti -1c
.RI "#define \fBTIM_INPUTCHANNELPOLARITY_BOTHEDGE\fP   (TIM_CCER_CC1P | TIM_CCER_CC1NP)"
.br
.ti -1c
.RI "#define \fBTIM_ETRPOLARITY_INVERTED\fP   TIM_SMCR_ETP"
.br
.ti -1c
.RI "#define \fBTIM_ETRPOLARITY_NONINVERTED\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_ETRPRESCALER_DIV1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_ETRPRESCALER_DIV2\fP   TIM_SMCR_ETPS_0"
.br
.ti -1c
.RI "#define \fBTIM_ETRPRESCALER_DIV4\fP   TIM_SMCR_ETPS_1"
.br
.ti -1c
.RI "#define \fBTIM_ETRPRESCALER_DIV8\fP   TIM_SMCR_ETPS"
.br
.ti -1c
.RI "#define \fBTIM_COUNTERMODE_UP\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_COUNTERMODE_DOWN\fP   TIM_CR1_DIR"
.br
.ti -1c
.RI "#define \fBTIM_COUNTERMODE_CENTERALIGNED1\fP   TIM_CR1_CMS_0"
.br
.ti -1c
.RI "#define \fBTIM_COUNTERMODE_CENTERALIGNED2\fP   TIM_CR1_CMS_1"
.br
.ti -1c
.RI "#define \fBTIM_COUNTERMODE_CENTERALIGNED3\fP   TIM_CR1_CMS"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKDIVISION_DIV1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKDIVISION_DIV2\fP   TIM_CR1_CKD_0"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKDIVISION_DIV4\fP   TIM_CR1_CKD_1"
.br
.ti -1c
.RI "#define \fBTIM_OUTPUTSTATE_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OUTPUTSTATE_ENABLE\fP   TIM_CCER_CC1E"
.br
.ti -1c
.RI "#define \fBTIM_AUTORELOAD_PRELOAD_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_AUTORELOAD_PRELOAD_ENABLE\fP   TIM_CR1_ARPE"
.br
.ti -1c
.RI "#define \fBTIM_OCFAST_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OCFAST_ENABLE\fP   TIM_CCMR1_OC1FE"
.br
.ti -1c
.RI "#define \fBTIM_OUTPUTNSTATE_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OUTPUTNSTATE_ENABLE\fP   TIM_CCER_CC1NE"
.br
.ti -1c
.RI "#define \fBTIM_OCPOLARITY_HIGH\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OCPOLARITY_LOW\fP   TIM_CCER_CC1P"
.br
.ti -1c
.RI "#define \fBTIM_OCNPOLARITY_HIGH\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OCNPOLARITY_LOW\fP   TIM_CCER_CC1NP"
.br
.ti -1c
.RI "#define \fBTIM_OCIDLESTATE_SET\fP   TIM_CR2_OIS1"
.br
.ti -1c
.RI "#define \fBTIM_OCIDLESTATE_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OCNIDLESTATE_SET\fP   TIM_CR2_OIS1N"
.br
.ti -1c
.RI "#define \fBTIM_OCNIDLESTATE_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_ICPOLARITY_RISING\fP   \fBTIM_INPUTCHANNELPOLARITY_RISING\fP"
.br
.ti -1c
.RI "#define \fBTIM_ICPOLARITY_FALLING\fP   \fBTIM_INPUTCHANNELPOLARITY_FALLING\fP"
.br
.ti -1c
.RI "#define \fBTIM_ICPOLARITY_BOTHEDGE\fP   \fBTIM_INPUTCHANNELPOLARITY_BOTHEDGE\fP"
.br
.ti -1c
.RI "#define \fBTIM_ICSELECTION_DIRECTTI\fP   TIM_CCMR1_CC1S_0"
.br
.ti -1c
.RI "#define \fBTIM_ICSELECTION_INDIRECTTI\fP   TIM_CCMR1_CC1S_1"
.br
.ti -1c
.RI "#define \fBTIM_ICSELECTION_TRC\fP   TIM_CCMR1_CC1S"
.br
.ti -1c
.RI "#define \fBTIM_ICPSC_DIV1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_ICPSC_DIV2\fP   TIM_CCMR1_IC1PSC_0"
.br
.ti -1c
.RI "#define \fBTIM_ICPSC_DIV4\fP   TIM_CCMR1_IC1PSC_1"
.br
.ti -1c
.RI "#define \fBTIM_ICPSC_DIV8\fP   TIM_CCMR1_IC1PSC"
.br
.ti -1c
.RI "#define \fBTIM_OPMODE_SINGLE\fP   TIM_CR1_OPM"
.br
.ti -1c
.RI "#define \fBTIM_OPMODE_REPETITIVE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_ENCODERMODE_TI1\fP   TIM_SMCR_SMS_0"
.br
.ti -1c
.RI "#define \fBTIM_ENCODERMODE_TI2\fP   TIM_SMCR_SMS_1"
.br
.ti -1c
.RI "#define \fBTIM_ENCODERMODE_TI12\fP   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_IT_UPDATE\fP   TIM_DIER_UIE"
.br
.ti -1c
.RI "#define \fBTIM_IT_CC1\fP   TIM_DIER_CC1IE"
.br
.ti -1c
.RI "#define \fBTIM_IT_CC2\fP   TIM_DIER_CC2IE"
.br
.ti -1c
.RI "#define \fBTIM_IT_CC3\fP   TIM_DIER_CC3IE"
.br
.ti -1c
.RI "#define \fBTIM_IT_CC4\fP   TIM_DIER_CC4IE"
.br
.ti -1c
.RI "#define \fBTIM_IT_COM\fP   TIM_DIER_COMIE"
.br
.ti -1c
.RI "#define \fBTIM_IT_TRIGGER\fP   TIM_DIER_TIE"
.br
.ti -1c
.RI "#define \fBTIM_IT_BREAK\fP   TIM_DIER_BIE"
.br
.ti -1c
.RI "#define \fBTIM_COMMUTATION_TRGI\fP   TIM_CR2_CCUS"
.br
.ti -1c
.RI "#define \fBTIM_COMMUTATION_SOFTWARE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_DMA_UPDATE\fP   TIM_DIER_UDE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_CC1\fP   TIM_DIER_CC1DE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_CC2\fP   TIM_DIER_CC2DE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_CC3\fP   TIM_DIER_CC3DE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_CC4\fP   TIM_DIER_CC4DE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_COM\fP   TIM_DIER_COMDE"
.br
.ti -1c
.RI "#define \fBTIM_DMA_TRIGGER\fP   TIM_DIER_TDE"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_UPDATE\fP   TIM_SR_UIF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC1\fP   TIM_SR_CC1IF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC2\fP   TIM_SR_CC2IF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC3\fP   TIM_SR_CC3IF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC4\fP   TIM_SR_CC4IF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_COM\fP   TIM_SR_COMIF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_TRIGGER\fP   TIM_SR_TIF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_BREAK\fP   TIM_SR_BIF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC1OF\fP   TIM_SR_CC1OF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC2OF\fP   TIM_SR_CC2OF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC3OF\fP   TIM_SR_CC3OF"
.br
.ti -1c
.RI "#define \fBTIM_FLAG_CC4OF\fP   TIM_SR_CC4OF"
.br
.ti -1c
.RI "#define \fBTIM_CHANNEL_1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_CHANNEL_2\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBTIM_CHANNEL_3\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBTIM_CHANNEL_4\fP   0x0000000CU"
.br
.ti -1c
.RI "#define \fBTIM_CHANNEL_ALL\fP   0x0000003CU"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ETRMODE2\fP   TIM_SMCR_ETPS_1"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_INTERNAL\fP   TIM_SMCR_ETPS_0"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ITR0\fP   \fBTIM_TS_ITR0\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ITR1\fP   \fBTIM_TS_ITR1\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ITR2\fP   \fBTIM_TS_ITR2\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ITR3\fP   \fBTIM_TS_ITR3\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_TI1ED\fP   \fBTIM_TS_TI1F_ED\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_TI1\fP   \fBTIM_TS_TI1FP1\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_TI2\fP   \fBTIM_TS_TI2FP2\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKSOURCE_ETRMODE1\fP   \fBTIM_TS_ETRF\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPOLARITY_INVERTED\fP   \fBTIM_ETRPOLARITY_INVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPOLARITY_NONINVERTED\fP   \fBTIM_ETRPOLARITY_NONINVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPOLARITY_RISING\fP   \fBTIM_INPUTCHANNELPOLARITY_RISING\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPOLARITY_FALLING\fP   \fBTIM_INPUTCHANNELPOLARITY_FALLING\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPOLARITY_BOTHEDGE\fP   \fBTIM_INPUTCHANNELPOLARITY_BOTHEDGE\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPRESCALER_DIV1\fP   \fBTIM_ETRPRESCALER_DIV1\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPRESCALER_DIV2\fP   \fBTIM_ETRPRESCALER_DIV2\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPRESCALER_DIV4\fP   \fBTIM_ETRPRESCALER_DIV4\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLOCKPRESCALER_DIV8\fP   \fBTIM_ETRPRESCALER_DIV8\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPOLARITY_INVERTED\fP   \fBTIM_ETRPOLARITY_INVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPOLARITY_NONINVERTED\fP   \fBTIM_ETRPOLARITY_NONINVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPRESCALER_DIV1\fP   \fBTIM_ETRPRESCALER_DIV1\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPRESCALER_DIV2\fP   \fBTIM_ETRPRESCALER_DIV2\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPRESCALER_DIV4\fP   \fBTIM_ETRPRESCALER_DIV4\fP"
.br
.ti -1c
.RI "#define \fBTIM_CLEARINPUTPRESCALER_DIV8\fP   \fBTIM_ETRPRESCALER_DIV8\fP"
.br
.ti -1c
.RI "#define \fBTIM_OSSR_ENABLE\fP   TIM_BDTR_OSSR"
.br
.ti -1c
.RI "#define \fBTIM_OSSR_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OSSI_ENABLE\fP   TIM_BDTR_OSSI"
.br
.ti -1c
.RI "#define \fBTIM_OSSI_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_LOCKLEVEL_OFF\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_LOCKLEVEL_1\fP   TIM_BDTR_LOCK_0"
.br
.ti -1c
.RI "#define \fBTIM_LOCKLEVEL_2\fP   TIM_BDTR_LOCK_1"
.br
.ti -1c
.RI "#define \fBTIM_LOCKLEVEL_3\fP   TIM_BDTR_LOCK"
.br
.ti -1c
.RI "#define \fBTIM_BREAK_ENABLE\fP   TIM_BDTR_BKE"
.br
.ti -1c
.RI "#define \fBTIM_BREAK_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKPOLARITY_LOW\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKPOLARITY_HIGH\fP   TIM_BDTR_BKP"
.br
.ti -1c
.RI "#define \fBTIM_AUTOMATICOUTPUT_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_AUTOMATICOUTPUT_ENABLE\fP   TIM_BDTR_AOE"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_ENABLE\fP   TIM_CR2_MMS_0"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_UPDATE\fP   TIM_CR2_MMS_1"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_OC1\fP   (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_OC1REF\fP   TIM_CR2_MMS_2"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_OC2REF\fP   (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_OC3REF\fP   (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)"
.br
.ti -1c
.RI "#define \fBTIM_TRGO_OC4REF\fP   (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_MASTERSLAVEMODE_ENABLE\fP   TIM_SMCR_MSM"
.br
.ti -1c
.RI "#define \fBTIM_MASTERSLAVEMODE_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_SLAVEMODE_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_SLAVEMODE_RESET\fP   TIM_SMCR_SMS_2"
.br
.ti -1c
.RI "#define \fBTIM_SLAVEMODE_GATED\fP   (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_SLAVEMODE_TRIGGER\fP   (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)"
.br
.ti -1c
.RI "#define \fBTIM_SLAVEMODE_EXTERNAL1\fP   (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_TIMING\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_ACTIVE\fP   TIM_CCMR1_OC1M_0"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_INACTIVE\fP   TIM_CCMR1_OC1M_1"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_TOGGLE\fP   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_PWM1\fP   (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_PWM2\fP   (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_FORCED_ACTIVE\fP   (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)"
.br
.ti -1c
.RI "#define \fBTIM_OCMODE_FORCED_INACTIVE\fP   TIM_CCMR1_OC1M_2"
.br
.ti -1c
.RI "#define \fBTIM_TS_ITR0\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_TS_ITR1\fP   TIM_SMCR_TS_0"
.br
.ti -1c
.RI "#define \fBTIM_TS_ITR2\fP   TIM_SMCR_TS_1"
.br
.ti -1c
.RI "#define \fBTIM_TS_ITR3\fP   (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)"
.br
.ti -1c
.RI "#define \fBTIM_TS_TI1F_ED\fP   TIM_SMCR_TS_2"
.br
.ti -1c
.RI "#define \fBTIM_TS_TI1FP1\fP   (TIM_SMCR_TS_0 | TIM_SMCR_TS_2)"
.br
.ti -1c
.RI "#define \fBTIM_TS_TI2FP2\fP   (TIM_SMCR_TS_1 | TIM_SMCR_TS_2)"
.br
.ti -1c
.RI "#define \fBTIM_TS_ETRF\fP   (TIM_SMCR_TS_0 | TIM_SMCR_TS_1 | TIM_SMCR_TS_2)"
.br
.ti -1c
.RI "#define \fBTIM_TS_NONE\fP   0x0000FFFFU"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPOLARITY_INVERTED\fP   \fBTIM_ETRPOLARITY_INVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPOLARITY_NONINVERTED\fP   \fBTIM_ETRPOLARITY_NONINVERTED\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPOLARITY_RISING\fP   \fBTIM_INPUTCHANNELPOLARITY_RISING\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPOLARITY_FALLING\fP   \fBTIM_INPUTCHANNELPOLARITY_FALLING\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPOLARITY_BOTHEDGE\fP   \fBTIM_INPUTCHANNELPOLARITY_BOTHEDGE\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPRESCALER_DIV1\fP   \fBTIM_ETRPRESCALER_DIV1\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPRESCALER_DIV2\fP   \fBTIM_ETRPRESCALER_DIV2\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPRESCALER_DIV4\fP   \fBTIM_ETRPRESCALER_DIV4\fP"
.br
.ti -1c
.RI "#define \fBTIM_TRIGGERPRESCALER_DIV8\fP   \fBTIM_ETRPRESCALER_DIV8\fP"
.br
.ti -1c
.RI "#define \fBTIM_TI1SELECTION_CH1\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_TI1SELECTION_XORCOMBINATION\fP   TIM_CR2_TI1S"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_1TRANSFER\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_2TRANSFERS\fP   0x00000100U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_3TRANSFERS\fP   0x00000200U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_4TRANSFERS\fP   0x00000300U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_5TRANSFERS\fP   0x00000400U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_6TRANSFERS\fP   0x00000500U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_7TRANSFERS\fP   0x00000600U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_8TRANSFERS\fP   0x00000700U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_9TRANSFERS\fP   0x00000800U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_10TRANSFERS\fP   0x00000900U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_11TRANSFERS\fP   0x00000A00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_12TRANSFERS\fP   0x00000B00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_13TRANSFERS\fP   0x00000C00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_14TRANSFERS\fP   0x00000D00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_15TRANSFERS\fP   0x00000E00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_16TRANSFERS\fP   0x00000F00U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_17TRANSFERS\fP   0x00001000U"
.br
.ti -1c
.RI "#define \fBTIM_DMABURSTLENGTH_18TRANSFERS\fP   0x00001100U"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_UPDATE\fP   ((uint16_t) 0x0000)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_CC1\fP   ((uint16_t) 0x0001)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_CC2\fP   ((uint16_t) 0x0002)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_CC3\fP   ((uint16_t) 0x0003)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_CC4\fP   ((uint16_t) 0x0004)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_COMMUTATION\fP   ((uint16_t) 0x0005)"
.br
.ti -1c
.RI "#define \fBTIM_DMA_ID_TRIGGER\fP   ((uint16_t) 0x0006)"
.br
.ti -1c
.RI "#define \fBTIM_CCx_ENABLE\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_CCx_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_CCxN_ENABLE\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBTIM_CCxN_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fB__HAL_TIM_RESET_HANDLE_STATE\fP(__HANDLE__)   ((__HANDLE__)\->State = \fBHAL_TIM_STATE_RESET\fP)"
.br
.RI "Reset TIM handle state\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1|=(TIM_CR1_CEN))"
.br
.RI "Enable the TIM peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_MOE_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->BDTR|=(TIM_BDTR_MOE))"
.br
.RI "Enable the TIM main Output\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_DISABLE\fP(__HANDLE__)"
.br
.RI "Disable the TIM peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_MOE_DISABLE\fP(__HANDLE__)"
.br
.RI "Disable the TIM main Output\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_MOE_DISABLE_UNCONDITIONALLY\fP(__HANDLE__)   (__HANDLE__)\->Instance\->BDTR &= ~(TIM_BDTR_MOE)"
.br
.RI "Disable the TIM main Output\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_ENABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->DIER |= (__INTERRUPT__))"
.br
.RI "Enable the specified TIM interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_DISABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->DIER &= ~(__INTERRUPT__))"
.br
.RI "Disable the specified TIM interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_ENABLE_DMA\fP(__HANDLE__,  __DMA__)   ((__HANDLE__)\->Instance\->DIER |= (__DMA__))"
.br
.RI "Enable the specified DMA request\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_DISABLE_DMA\fP(__HANDLE__,  __DMA__)   ((__HANDLE__)\->Instance\->DIER &= ~(__DMA__))"
.br
.RI "Disable the specified DMA request\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((__HANDLE__)\->Instance\->SR &(__FLAG__)) == (__FLAG__))"
.br
.RI "Check whether the specified TIM interrupt flag is set or not\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->SR = ~(__FLAG__))"
.br
.RI "Clear the specified TIM interrupt flag\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   ((((__HANDLE__)\->Instance\->DIER & (__INTERRUPT__)) == (__INTERRUPT__)) ? SET : RESET)"
.br
.RI "Check whether the specified TIM interrupt source is enabled or not\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_CLEAR_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->SR = ~(__INTERRUPT__))"
.br
.RI "Clear the TIM interrupt pending bits\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_IS_TIM_COUNTING_DOWN\fP(__HANDLE__)   (((__HANDLE__)\->Instance\->CR1 &(TIM_CR1_DIR)) == (TIM_CR1_DIR))"
.br
.ti -1c
.RI "#define \fB__HAL_TIM_SET_PRESCALER\fP(__HANDLE__,  __PRESC__)   ((__HANDLE__)\->Instance\->PSC = (__PRESC__))"
.br
.RI "Set the TIM Prescaler on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_COUNTER\fP(__HANDLE__,  __COUNTER__)   ((__HANDLE__)\->Instance\->CNT = (__COUNTER__))"
.br
.RI "Set the TIM Counter Register value on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_COUNTER\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CNT)"
.br
.RI "Get the TIM Counter Register value on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_AUTORELOAD\fP(__HANDLE__,  __AUTORELOAD__)"
.br
.RI "Set the TIM Autoreload Register value on runtime without calling another time any Init function\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_AUTORELOAD\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->ARR)"
.br
.RI "Get the TIM Autoreload Register value on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_CLOCKDIVISION\fP(__HANDLE__,  __CKD__)"
.br
.RI "Set the TIM Clock Division value on runtime without calling another time any Init function\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_CLOCKDIVISION\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1 & TIM_CR1_CKD)"
.br
.RI "Get the TIM Clock Division value on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_ICPRESCALER\fP(__HANDLE__,  __CHANNEL__,  __ICPSC__)"
.br
.RI "Set the TIM Input Capture prescaler on runtime without calling another time \fBHAL_TIM_IC_ConfigChannel()\fP function\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_ICPRESCALER\fP(__HANDLE__,  __CHANNEL__)"
.br
.RI "Get the TIM Input Capture prescaler on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_COMPARE\fP(__HANDLE__,  __CHANNEL__,  __COMPARE__)"
.br
.RI "Set the TIM Capture Compare Register value on runtime without calling another time ConfigChannel function\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_GET_COMPARE\fP(__HANDLE__,  __CHANNEL__)"
.br
.RI "Get the TIM Capture Compare Register value on runtime\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_ENABLE_OCxPRELOAD\fP(__HANDLE__,  __CHANNEL__)"
.br
.RI "Set the TIM Output compare preload\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_DISABLE_OCxPRELOAD\fP(__HANDLE__,  __CHANNEL__)"
.br
.RI "Reset the TIM Output compare preload\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_URS_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1|= TIM_CR1_URS)"
.br
.RI "Set the Update Request Source (URS) bit of the TIMx_CR1 register\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_URS_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1&=~TIM_CR1_URS)"
.br
.RI "Reset the Update Request Source (URS) bit of the TIMx_CR1 register\&. "
.ti -1c
.RI "#define \fB__HAL_TIM_SET_CAPTUREPOLARITY\fP(__HANDLE__,  __CHANNEL__,  __POLARITY__)"
.br
.RI "Set the TIM Capture x input polarity on runtime\&. "
.ti -1c
.RI "#define \fBTIM_CCER_CCxE_MASK\fP   ((uint32_t)(TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E | TIM_CCER_CC4E))"
.br
.ti -1c
.RI "#define \fBTIM_CCER_CCxNE_MASK\fP   ((uint32_t)(TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE))"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLEARINPUT_SOURCE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_DMA_BASE\fP(__BASE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_EVENT_SOURCE\fP(__SOURCE__)   ((((__SOURCE__) & 0xFFFFFF00U) == 0x00000000U) && ((__SOURCE__) != 0x00000000U))"
.br
.ti -1c
.RI "#define \fBIS_TIM_COUNTER_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLOCKDIVISION_DIV\fP(__DIV__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_AUTORELOAD_PRELOAD\fP(PRELOAD)"
.br
.ti -1c
.RI "#define \fBIS_TIM_FAST_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OC_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OCN_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OCIDLE_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OCNIDLE_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_IC_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_IC_SELECTION\fP(__SELECTION__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_IC_PRESCALER\fP(__PRESCALER__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OPM_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_ENCODER_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_DMA_SOURCE\fP(__SOURCE__)   ((((__SOURCE__) & 0xFFFF80FFU) == 0x00000000U) && ((__SOURCE__) != 0x00000000U))"
.br
.ti -1c
.RI "#define \fBIS_TIM_CHANNELS\fP(__CHANNEL__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OPM_CHANNELS\fP(__CHANNEL__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_COMPLEMENTARY_CHANNELS\fP(__CHANNEL__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLOCKSOURCE\fP(__CLOCK__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLOCKPOLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLOCKPRESCALER\fP(__PRESCALER__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLOCKFILTER\fP(__ICFILTER__)   ((__ICFILTER__) <= 0xFU)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLEARINPUT_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLEARINPUT_PRESCALER\fP(__PRESCALER__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_CLEARINPUT_FILTER\fP(__ICFILTER__)   ((__ICFILTER__) <= 0xFU)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OSSR_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OSSI_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_LOCK_LEVEL\fP(__LEVEL__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAK_FILTER\fP(__BRKFILTER__)   ((__BRKFILTER__) <= 0xFUL)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAK_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAK_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_AUTOMATIC_OUTPUT_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TRGO_SOURCE\fP(__SOURCE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_MSM_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_SLAVE_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_PWM_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_OC_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TRIGGER_SELECTION\fP(__SELECTION__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_INTERNAL_TRIGGEREVENT_SELECTION\fP(__SELECTION__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TRIGGERPOLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TRIGGERPRESCALER\fP(__PRESCALER__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TRIGGERFILTER\fP(__ICFILTER__)   ((__ICFILTER__) <= 0xFU)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TI1SELECTION\fP(__TI1SELECTION__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_DMA_LENGTH\fP(__LENGTH__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_IC_FILTER\fP(__ICFILTER__)   ((__ICFILTER__) <= 0xFU)"
.br
.ti -1c
.RI "#define \fBIS_TIM_DEADTIME\fP(__DEADTIME__)   ((__DEADTIME__) <= 0xFFU)"
.br
.ti -1c
.RI "#define \fBIS_TIM_SLAVEMODE_TRIGGER_ENABLED\fP(__TRIGGER__)   ((__TRIGGER__) == \fBTIM_SLAVEMODE_TRIGGER\fP)"
.br
.ti -1c
.RI "#define \fBTIM_SET_ICPRESCALERVALUE\fP(__HANDLE__,  __CHANNEL__,  __ICPSC__)"
.br
.ti -1c
.RI "#define \fBTIM_RESET_ICPRESCALERVALUE\fP(__HANDLE__,  __CHANNEL__)"
.br
.ti -1c
.RI "#define \fBTIM_SET_CAPTUREPOLARITY\fP(__HANDLE__,  __CHANNEL__,  __POLARITY__)"
.br
.ti -1c
.RI "#define \fBTIM_RESET_CAPTUREPOLARITY\fP(__HANDLE__,  __CHANNEL__)"
.br
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBHAL_TIM_StateTypeDef\fP { \fBHAL_TIM_STATE_RESET\fP = 0x00U, \fBHAL_TIM_STATE_READY\fP = 0x01U, \fBHAL_TIM_STATE_BUSY\fP = 0x02U, \fBHAL_TIM_STATE_TIMEOUT\fP = 0x03U, \fBHAL_TIM_STATE_ERROR\fP = 0x04U }"
.br
.RI "HAL State structures definition "
.ti -1c
.RI "enum \fBHAL_TIM_ActiveChannel\fP { \fBHAL_TIM_ACTIVE_CHANNEL_1\fP = 0x01U, \fBHAL_TIM_ACTIVE_CHANNEL_2\fP = 0x02U, \fBHAL_TIM_ACTIVE_CHANNEL_3\fP = 0x04U, \fBHAL_TIM_ACTIVE_CHANNEL_4\fP = 0x08U, \fBHAL_TIM_ACTIVE_CHANNEL_CLEARED\fP = 0x00U }"
.br
.RI "HAL Active channel structures definition "
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Init\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_Base_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_Base_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Start\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Stop\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Base_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Init\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_OC_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_OC_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Init\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_PWM_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_PWM_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Init\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_IC_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_IC_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_Init\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OnePulseMode)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_OnePulse_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_OnePulse_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Init\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_Encoder_InitTypeDef\fP *sConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_Encoder_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_Encoder_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, uint32_t *pData1, uint32_t *pData2, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_Encoder_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "void \fBHAL_TIM_IRQHandler\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OC_ConfigChannel\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_OC_InitTypeDef\fP *sConfig, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_PWM_ConfigChannel\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_OC_InitTypeDef\fP *sConfig, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_IC_ConfigChannel\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_IC_InitTypeDef\fP *sConfig, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_OnePulse_ConfigChannel\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_OnePulse_InitTypeDef\fP *sConfig, uint32_t OutputChannel, uint32_t InputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_ConfigOCrefClear\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_ClearInputConfigTypeDef\fP *sClearInputConfig, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_ConfigClockSource\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_ClockConfigTypeDef\fP *sClockSourceConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_ConfigTI1Input\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t TI1_Selection)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_SlaveConfigSynchro\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_SlaveConfigTypeDef\fP *sSlaveConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_SlaveConfigSynchro_IT\fP (\fBTIM_HandleTypeDef\fP *htim, \fBTIM_SlaveConfigTypeDef\fP *sSlaveConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_DMABurst_WriteStart\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t *BurstBuffer, uint32_t BurstLength)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_DMABurst_WriteStop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BurstRequestSrc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_DMABurst_ReadStart\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BurstBaseAddress, uint32_t BurstRequestSrc, uint32_t *BurstBuffer, uint32_t BurstLength)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_DMABurst_ReadStop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BurstRequestSrc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIM_GenerateEvent\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t EventSource)"
.br
.ti -1c
.RI "uint32_t \fBHAL_TIM_ReadCapturedValue\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "void \fBHAL_TIM_PeriodElapsedCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.RI "Period elapsed callback in non blocking mode "
.ti -1c
.RI "void \fBHAL_TIM_PeriodElapsedHalfCpltCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_OC_DelayElapsedCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_IC_CaptureCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_IC_CaptureHalfCpltCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_PWM_PulseFinishedCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_PWM_PulseFinishedHalfCpltCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_TriggerCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_TriggerHalfCpltCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIM_ErrorCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_Base_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_OC_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_PWM_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_IC_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_OnePulse_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIM_Encoder_GetState\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBTIM_Base_SetConfig\fP (TIM_TypeDef *TIMx, \fBTIM_Base_InitTypeDef\fP *Structure)"
.br
.ti -1c
.RI "void \fBTIM_TI1_SetConfig\fP (TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection, uint32_t TIM_ICFilter)"
.br
.ti -1c
.RI "void \fBTIM_OC2_SetConfig\fP (TIM_TypeDef *TIMx, \fBTIM_OC_InitTypeDef\fP *OC_Config)"
.br
.ti -1c
.RI "void \fBTIM_ETR_SetConfig\fP (TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler, uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)"
.br
.ti -1c
.RI "void \fBTIM_DMADelayPulseCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIM_DMADelayPulseHalfCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIM_DMAError\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIM_DMACaptureCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIM_DMACaptureHalfCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIM_CCxChannelCmd\fP (TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of TIM HAL module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2016 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_tim\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
