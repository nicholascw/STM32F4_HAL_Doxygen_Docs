.TH "inc/stm32f4xx_hal_adc_ex.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_adc_ex.h \- Header file of ADC HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBADC_InjectionConfTypeDef\fP"
.br
.RI "ADC Configuration injected Channel structure definition "
.ti -1c
.RI "struct \fBADC_MultiModeTypeDef\fP"
.br
.RI "ADC Configuration multi-mode structure definition 
.br
 "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBADC_MODE_INDEPENDENT\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_REGSIMULT_INJECSIMULT\fP   ((uint32_t)ADC_CCR_MULTI_0)"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_REGSIMULT_ALTERTRIG\fP   ((uint32_t)ADC_CCR_MULTI_1)"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_INJECSIMULT\fP   ((uint32_t)(ADC_CCR_MULTI_2 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_REGSIMULT\fP   ((uint32_t)(ADC_CCR_MULTI_2 | ADC_CCR_MULTI_1))"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_INTERL\fP   ((uint32_t)(ADC_CCR_MULTI_2 | ADC_CCR_MULTI_1 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_DUALMODE_ALTERTRIG\fP   ((uint32_t)(ADC_CCR_MULTI_3 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_REGSIMULT_INJECSIMULT\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_REGSIMULT_AlterTrig\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_1))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_INJECSIMULT\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_2 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_REGSIMULT\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_2 | ADC_CCR_MULTI_1))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_INTERL\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_2 | ADC_CCR_MULTI_1 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_TRIPLEMODE_ALTERTRIG\fP   ((uint32_t)(ADC_CCR_MULTI_4 | ADC_CCR_MULTI_3 | ADC_CCR_MULTI_0))"
.br
.ti -1c
.RI "#define \fBADC_DMAACCESSMODE_DISABLED\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBADC_DMAACCESSMODE_1\fP   ((uint32_t)ADC_CCR_DMA_0)"
.br
.ti -1c
.RI "#define \fBADC_DMAACCESSMODE_2\fP   ((uint32_t)ADC_CCR_DMA_1)"
.br
.ti -1c
.RI "#define \fBADC_DMAACCESSMODE_3\fP   ((uint32_t)ADC_CCR_DMA)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONVEDGE_NONE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONVEDGE_RISING\fP   ((uint32_t)ADC_CR2_JEXTEN_0)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONVEDGE_FALLING\fP   ((uint32_t)ADC_CR2_JEXTEN_1)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONVEDGE_RISINGFALLING\fP   ((uint32_t)ADC_CR2_JEXTEN)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T1_CC4\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T1_TRGO\fP   ((uint32_t)ADC_CR2_JEXTSEL_0)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T2_CC1\fP   ((uint32_t)ADC_CR2_JEXTSEL_1)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T2_TRGO\fP   ((uint32_t)(ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T3_CC2\fP   ((uint32_t)ADC_CR2_JEXTSEL_2)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T3_CC4\fP   ((uint32_t)(ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T4_CC1\fP   ((uint32_t)(ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T4_CC2\fP   ((uint32_t)(ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T4_CC3\fP   ((uint32_t)ADC_CR2_JEXTSEL_3)"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T4_TRGO\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T5_CC4\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_1))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T5_TRGO\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T8_CC2\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_2))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T8_CC3\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_0))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_T8_CC4\fP   ((uint32_t)(ADC_CR2_JEXTSEL_3 | ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1))"
.br
.ti -1c
.RI "#define \fBADC_EXTERNALTRIGINJECCONV_EXT_IT15\fP   ((uint32_t)ADC_CR2_JEXTSEL)"
.br
.ti -1c
.RI "#define \fBADC_INJECTED_SOFTWARE_START\fP   ((uint32_t)ADC_CR2_JEXTSEL + 1U)"
.br
.ti -1c
.RI "#define \fBADC_INJECTED_RANK_1\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBADC_INJECTED_RANK_2\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBADC_INJECTED_RANK_3\fP   0x00000003U"
.br
.ti -1c
.RI "#define \fBADC_INJECTED_RANK_4\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBIS_ADC_MODE\fP(MODE)"
.br
.ti -1c
.RI "#define \fBIS_ADC_DMA_ACCESS_MODE\fP(MODE)"
.br
.ti -1c
.RI "#define \fBIS_ADC_EXT_INJEC_TRIG_EDGE\fP(EDGE)"
.br
.ti -1c
.RI "#define \fBIS_ADC_EXT_INJEC_TRIG\fP(INJTRIG)"
.br
.ti -1c
.RI "#define \fBIS_ADC_INJECTED_LENGTH\fP(LENGTH)   (((LENGTH) >= 1U) && ((LENGTH) <= 4U))"
.br
.ti -1c
.RI "#define \fBIS_ADC_INJECTED_RANK\fP(RANK)   (((RANK) >= 1U) && ((RANK) <= 4U))"
.br
.ti -1c
.RI "#define \fBADC_JSQR\fP(_CHANNELNB_,  _RANKNB_,  _JSQR_JL_)   (((uint32_t)((uint16_t)(_CHANNELNB_))) << (5U * (uint8_t)(((_RANKNB_) + 3U) \- (_JSQR_JL_))))"
.br
.RI "Set the selected injected Channel rank\&. "
.ti -1c
.RI "#define \fBADC_COMMON_REGISTER\fP(__HANDLE__)   ADC1_COMMON"
.br
.RI "Defines if the selected ADC is within ADC common register ADC123 or ADC1 if available (ADC2, ADC3 availability depends on STM32 product) "
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedStart\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedStop\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedPollForConversion\fP (\fBADC_HandleTypeDef\fP *hadc, uint32_t Timeout)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedStart_IT\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedStop_IT\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "uint32_t \fBHAL_ADCEx_InjectedGetValue\fP (\fBADC_HandleTypeDef\fP *hadc, uint32_t InjectedRank)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_MultiModeStart_DMA\fP (\fBADC_HandleTypeDef\fP *hadc, uint32_t *pData, uint32_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_MultiModeStop_DMA\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "uint32_t \fBHAL_ADCEx_MultiModeGetValue\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "void \fBHAL_ADCEx_InjectedConvCpltCallback\fP (\fBADC_HandleTypeDef\fP *hadc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_InjectedConfigChannel\fP (\fBADC_HandleTypeDef\fP *hadc, \fBADC_InjectionConfTypeDef\fP *sConfigInjected)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_ADCEx_MultiModeConfigChannel\fP (\fBADC_HandleTypeDef\fP *hadc, \fBADC_MultiModeTypeDef\fP *multimode)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of ADC HAL module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_adc_ex\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
