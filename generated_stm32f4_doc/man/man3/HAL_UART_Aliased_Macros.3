.TH "HAL_UART_Aliased_Macros" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL_UART_Aliased_Macros
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fB__HAL_UART_GETCLOCKSOURCE\fP   UART_GETCLOCKSOURCE"
.br
.ti -1c
.RI "#define \fB__HAL_UART_MASK_COMPUTATION\fP   UART_MASK_COMPUTATION"
.br
.ti -1c
.RI "#define \fB__UART_GETCLOCKSOURCE\fP   UART_GETCLOCKSOURCE"
.br
.ti -1c
.RI "#define \fB__UART_MASK_COMPUTATION\fP   UART_MASK_COMPUTATION"
.br
.ti -1c
.RI "#define \fBIS_UART_WAKEUPMETHODE\fP   \fBIS_UART_WAKEUPMETHOD\fP"
.br
.ti -1c
.RI "#define \fBIS_UART_ONEBIT_SAMPLE\fP   IS_UART_ONE_BIT_SAMPLE"
.br
.ti -1c
.RI "#define \fBIS_UART_ONEBIT_SAMPLING\fP   IS_UART_ONE_BIT_SAMPLE"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define __HAL_UART_GETCLOCKSOURCE   UART_GETCLOCKSOURCE"

.PP
在文件 stm32_hal_legacy\&.h 第 3251 行定义\&.
.SS "#define __HAL_UART_MASK_COMPUTATION   UART_MASK_COMPUTATION"

.PP
在文件 stm32_hal_legacy\&.h 第 3252 行定义\&.
.SS "#define __UART_GETCLOCKSOURCE   UART_GETCLOCKSOURCE"

.PP
在文件 stm32_hal_legacy\&.h 第 3253 行定义\&.
.SS "#define __UART_MASK_COMPUTATION   UART_MASK_COMPUTATION"

.PP
在文件 stm32_hal_legacy\&.h 第 3254 行定义\&.
.SS "#define IS_UART_ONEBIT_SAMPLE   IS_UART_ONE_BIT_SAMPLE"

.PP
在文件 stm32_hal_legacy\&.h 第 3258 行定义\&.
.SS "#define IS_UART_ONEBIT_SAMPLING   IS_UART_ONE_BIT_SAMPLE"

.PP
在文件 stm32_hal_legacy\&.h 第 3259 行定义\&.
.SS "#define IS_UART_WAKEUPMETHODE   \fBIS_UART_WAKEUPMETHOD\fP"

.PP
在文件 stm32_hal_legacy\&.h 第 3256 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
