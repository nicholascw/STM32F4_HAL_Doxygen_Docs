.TH "inc/stm32f4xx_hal_rtc.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_rtc.h \- Header file of RTC HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br
\fC#include 'stm32f4xx_hal_rtc_ex\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBRTC_InitTypeDef\fP"
.br
.RI "RTC Configuration Structure definition "
.ti -1c
.RI "struct \fBRTC_TimeTypeDef\fP"
.br
.RI "RTC Time structure definition "
.ti -1c
.RI "struct \fBRTC_DateTypeDef\fP"
.br
.RI "RTC Date structure definition "
.ti -1c
.RI "struct \fBRTC_AlarmTypeDef\fP"
.br
.RI "RTC Alarm structure definition "
.ti -1c
.RI "struct \fBRTC_HandleTypeDef\fP"
.br
.RI "RTC Handle Structure definition "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBRTC_HOURFORMAT_24\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_HOURFORMAT_12\fP   0x00000040U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_ALARMA\fP   0x00200000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_ALARMB\fP   0x00400000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_WAKEUP\fP   0x00600000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_POLARITY_HIGH\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_POLARITY_LOW\fP   0x00100000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_TYPE_OPENDRAIN\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_OUTPUT_TYPE_PUSHPULL\fP   0x00040000U"
.br
.ti -1c
.RI "#define \fBRTC_HOURFORMAT12_AM\fP   ((uint8_t)0x00)"
.br
.ti -1c
.RI "#define \fBRTC_HOURFORMAT12_PM\fP   ((uint8_t)0x40)"
.br
.ti -1c
.RI "#define \fBRTC_DAYLIGHTSAVING_SUB1H\fP   0x00020000U"
.br
.ti -1c
.RI "#define \fBRTC_DAYLIGHTSAVING_ADD1H\fP   0x00010000U"
.br
.ti -1c
.RI "#define \fBRTC_DAYLIGHTSAVING_NONE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_STOREOPERATION_RESET\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_STOREOPERATION_SET\fP   0x00040000U"
.br
.ti -1c
.RI "#define \fBRTC_FORMAT_BIN\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_FORMAT_BCD\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_JANUARY\fP   ((uint8_t)0x01)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_FEBRUARY\fP   ((uint8_t)0x02)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_MARCH\fP   ((uint8_t)0x03)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_APRIL\fP   ((uint8_t)0x04)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_MAY\fP   ((uint8_t)0x05)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_JUNE\fP   ((uint8_t)0x06)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_JULY\fP   ((uint8_t)0x07)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_AUGUST\fP   ((uint8_t)0x08)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_SEPTEMBER\fP   ((uint8_t)0x09)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_OCTOBER\fP   ((uint8_t)0x10)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_NOVEMBER\fP   ((uint8_t)0x11)"
.br
.ti -1c
.RI "#define \fBRTC_MONTH_DECEMBER\fP   ((uint8_t)0x12)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_MONDAY\fP   ((uint8_t)0x01)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_TUESDAY\fP   ((uint8_t)0x02)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_WEDNESDAY\fP   ((uint8_t)0x03)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_THURSDAY\fP   ((uint8_t)0x04)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_FRIDAY\fP   ((uint8_t)0x05)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_SATURDAY\fP   ((uint8_t)0x06)"
.br
.ti -1c
.RI "#define \fBRTC_WEEKDAY_SUNDAY\fP   ((uint8_t)0x07)"
.br
.ti -1c
.RI "#define \fBRTC_ALARMDATEWEEKDAYSEL_DATE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMDATEWEEKDAYSEL_WEEKDAY\fP   0x40000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_NONE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_DATEWEEKDAY\fP   RTC_ALRMAR_MSK4"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_HOURS\fP   RTC_ALRMAR_MSK3"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_MINUTES\fP   RTC_ALRMAR_MSK2"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_SECONDS\fP   RTC_ALRMAR_MSK1"
.br
.ti -1c
.RI "#define \fBRTC_ALARMMASK_ALL\fP   0x80808080U"
.br
.ti -1c
.RI "#define \fBRTC_ALARM_A\fP   RTC_CR_ALRAE"
.br
.ti -1c
.RI "#define \fBRTC_ALARM_B\fP   RTC_CR_ALRBE"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_ALL\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_1\fP   0x01000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_2\fP   0x02000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_3\fP   0x03000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_4\fP   0x04000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_5\fP   0x05000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_6\fP   0x06000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_7\fP   0x07000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_8\fP   0x08000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_9\fP   0x09000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_10\fP   0x0A000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_11\fP   0x0B000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_12\fP   0x0C000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14_13\fP   0x0D000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_SS14\fP   0x0E000000U"
.br
.ti -1c
.RI "#define \fBRTC_ALARMSUBSECONDMASK_NONE\fP   0x0F000000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_TS\fP   0x00008000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_WUT\fP   0x00004000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_ALRB\fP   0x00002000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_ALRA\fP   0x00001000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_TAMP\fP   0x00000004U /* Used only to Enable the Tamper Interrupt */"
.br
.ti -1c
.RI "#define \fBRTC_IT_TAMP1\fP   0x00020000U"
.br
.ti -1c
.RI "#define \fBRTC_IT_TAMP2\fP   0x00040000U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_RECALPF\fP   0x00010000U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_TAMP2F\fP   0x00004000U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_TAMP1F\fP   0x00002000U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_TSOVF\fP   0x00001000U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_TSF\fP   0x00000800U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_WUTF\fP   0x00000400U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_ALRBF\fP   0x00000200U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_ALRAF\fP   0x00000100U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_INITF\fP   0x00000040U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_RSF\fP   0x00000020U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_INITS\fP   0x00000010U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_SHPF\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_WUTWF\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_ALRBWF\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBRTC_FLAG_ALRAWF\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fB__HAL_RTC_RESET_HANDLE_STATE\fP(__HANDLE__)   ((__HANDLE__)\->State = \fBHAL_RTC_STATE_RESET\fP)"
.br
.RI "Reset RTC handle state "
.ti -1c
.RI "#define \fB__HAL_RTC_WRITEPROTECTION_DISABLE\fP(__HANDLE__)"
.br
.RI "Disable the write protection for RTC registers\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_WRITEPROTECTION_ENABLE\fP(__HANDLE__)"
.br
.RI "Enable the write protection for RTC registers\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARMA_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_ALRAE))"
.br
.RI "Enable the RTC ALARMA peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARMA_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_ALRAE))"
.br
.RI "Disable the RTC ALARMA peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARMB_ENABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR |= (RTC_CR_ALRBE))"
.br
.RI "Enable the RTC ALARMB peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARMB_DISABLE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR &= ~(RTC_CR_ALRBE))"
.br
.RI "Disable the RTC ALARMB peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_ENABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR |= (__INTERRUPT__))"
.br
.RI "Enable the RTC Alarm interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_DISABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   ((__HANDLE__)\->Instance\->CR &= ~(__INTERRUPT__))"
.br
.RI "Disable the RTC Alarm interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_GET_IT\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->ISR)& ((__INTERRUPT__)>> 4U)) != RESET)? SET : RESET)"
.br
.RI "Check whether the specified RTC Alarm interrupt has occurred or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((((__HANDLE__)\->Instance\->ISR) & (__FLAG__)) != RESET)? SET : RESET)"
.br
.RI "Get the selected RTC Alarm's flag status\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->ISR) = (~((__FLAG__) | RTC_ISR_INIT)|((__HANDLE__)\->Instance\->ISR & RTC_ISR_INIT))"
.br
.RI "Clear the RTC Alarm's pending flags\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   (((((__HANDLE__)\->Instance\->CR) & (__INTERRUPT__)) != RESET) ? SET : RESET)"
.br
.RI "Check whether the specified RTC Alarm interrupt has been enabled or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_ENABLE_IT\fP()   (EXTI\->IMR |= \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Enable interrupt on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_DISABLE_IT\fP()   (EXTI\->IMR &= ~(\fBRTC_EXTI_LINE_ALARM_EVENT\fP))"
.br
.RI "Disable interrupt on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_ENABLE_EVENT\fP()   (EXTI\->EMR |= \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Enable event on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_DISABLE_EVENT\fP()   (EXTI\->EMR &= ~(\fBRTC_EXTI_LINE_ALARM_EVENT\fP))"
.br
.RI "Disable event on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_ENABLE_FALLING_EDGE\fP()   (EXTI\->FTSR |= \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Enable falling edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_DISABLE_FALLING_EDGE\fP()   (EXTI\->FTSR &= ~(\fBRTC_EXTI_LINE_ALARM_EVENT\fP))"
.br
.RI "Disable falling edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE\fP()   (EXTI\->RTSR |= \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Enable rising edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_DISABLE_RISING_EDGE\fP()   (EXTI\->RTSR &= ~(\fBRTC_EXTI_LINE_ALARM_EVENT\fP))"
.br
.RI "Disable rising edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_ENABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Enable rising & falling edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_DISABLE_RISING_FALLING_EDGE\fP()"
.br
.RI "Disable rising & falling edge trigger on the RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_GET_FLAG\fP()   (EXTI\->PR & \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Check whether the RTC Alarm associated Exti line interrupt flag is set or not\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_CLEAR_FLAG\fP()   (EXTI\->PR = \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Clear the RTC Alarm associated Exti line flag\&. "
.ti -1c
.RI "#define \fB__HAL_RTC_ALARM_EXTI_GENERATE_SWIT\fP()   (EXTI\->SWIER |= \fBRTC_EXTI_LINE_ALARM_EVENT\fP)"
.br
.RI "Generate a Software interrupt on RTC Alarm associated Exti line\&. "
.ti -1c
.RI "#define \fBRTC_TR_RESERVED_MASK\fP   0x007F7F7FU"
.br
.ti -1c
.RI "#define \fBRTC_DR_RESERVED_MASK\fP   0x00FFFF3FU"
.br
.ti -1c
.RI "#define \fBRTC_INIT_MASK\fP   0xFFFFFFFFU"
.br
.ti -1c
.RI "#define \fBRTC_RSF_MASK\fP   0xFFFFFF5FU"
.br
.ti -1c
.RI "#define \fBRTC_FLAGS_MASK\fP"
.br
.ti -1c
.RI "#define \fBRTC_TIMEOUT_VALUE\fP   1000"
.br
.ti -1c
.RI "#define \fBRTC_EXTI_LINE_ALARM_EVENT\fP   ((uint32_t)EXTI_IMR_MR17)"
.br
.ti -1c
.RI "#define \fBIS_RTC_HOUR_FORMAT\fP(FORMAT)"
.br
.ti -1c
.RI "#define \fBIS_RTC_OUTPUT\fP(OUTPUT)"
.br
.ti -1c
.RI "#define \fBIS_RTC_OUTPUT_POL\fP(POL)"
.br
.ti -1c
.RI "#define \fBIS_RTC_OUTPUT_TYPE\fP(TYPE)"
.br
.ti -1c
.RI "#define \fBIS_RTC_HOUR12\fP(HOUR)   (((HOUR) > 0U) && ((HOUR) <= 12U))"
.br
.ti -1c
.RI "#define \fBIS_RTC_HOUR24\fP(HOUR)   ((HOUR) <= 23U)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ASYNCH_PREDIV\fP(PREDIV)   ((PREDIV) <= 0x7FU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SYNCH_PREDIV\fP(PREDIV)   ((PREDIV) <= 0x7FFFU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_MINUTES\fP(MINUTES)   ((MINUTES) <= 59U)"
.br
.ti -1c
.RI "#define \fBIS_RTC_SECONDS\fP(SECONDS)   ((SECONDS) <= 59U)"
.br
.ti -1c
.RI "#define \fBIS_RTC_HOURFORMAT12\fP(PM)   (((PM) == \fBRTC_HOURFORMAT12_AM\fP) || ((PM) == \fBRTC_HOURFORMAT12_PM\fP))"
.br
.ti -1c
.RI "#define \fBIS_RTC_DAYLIGHT_SAVING\fP(SAVE)"
.br
.ti -1c
.RI "#define \fBIS_RTC_STORE_OPERATION\fP(OPERATION)"
.br
.ti -1c
.RI "#define \fBIS_RTC_FORMAT\fP(FORMAT)   (((FORMAT) == \fBRTC_FORMAT_BIN\fP) || ((FORMAT) == \fBRTC_FORMAT_BCD\fP))"
.br
.ti -1c
.RI "#define \fBIS_RTC_YEAR\fP(YEAR)   ((YEAR) <= 99U)"
.br
.ti -1c
.RI "#define \fBIS_RTC_MONTH\fP(MONTH)   (((MONTH) >= 1U) && ((MONTH) <= 12U))"
.br
.ti -1c
.RI "#define \fBIS_RTC_DATE\fP(DATE)   (((DATE) >= 1U) && ((DATE) <= 31U))"
.br
.ti -1c
.RI "#define \fBIS_RTC_WEEKDAY\fP(WEEKDAY)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_DATE_WEEKDAY_DATE\fP(DATE)   (((DATE) > 0U) && ((DATE) <= 31U))"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY\fP(WEEKDAY)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_DATE_WEEKDAY_SEL\fP(SEL)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_MASK\fP(MASK)   (((MASK) & 0x7F7F7F7FU) == (uint32_t)RESET)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM\fP(ALARM)   (((ALARM) == \fBRTC_ALARM_A\fP) || ((ALARM) == \fBRTC_ALARM_B\fP))"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_SUB_SECOND_VALUE\fP(VALUE)   ((VALUE) <= 0x00007FFFU)"
.br
.ti -1c
.RI "#define \fBIS_RTC_ALARM_SUB_SECOND_MASK\fP(MASK)"
.br
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBHAL_RTCStateTypeDef\fP { \fBHAL_RTC_STATE_RESET\fP = 0x00U, \fBHAL_RTC_STATE_READY\fP = 0x01U, \fBHAL_RTC_STATE_BUSY\fP = 0x02U, \fBHAL_RTC_STATE_TIMEOUT\fP = 0x03U, \fBHAL_RTC_STATE_ERROR\fP = 0x04U }"
.br
.RI "HAL State structures definition "
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_Init\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_DeInit\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTC_MspInit\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "void \fBHAL_RTC_MspDeInit\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_SetTime\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_TimeTypeDef\fP *sTime, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_GetTime\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_TimeTypeDef\fP *sTime, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_SetDate\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_DateTypeDef\fP *sDate, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_GetDate\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_DateTypeDef\fP *sDate, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_SetAlarm\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_AlarmTypeDef\fP *sAlarm, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_SetAlarm_IT\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_AlarmTypeDef\fP *sAlarm, uint32_t Format)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_DeactivateAlarm\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Alarm)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_GetAlarm\fP (\fBRTC_HandleTypeDef\fP *hrtc, \fBRTC_AlarmTypeDef\fP *sAlarm, uint32_t Alarm, uint32_t Format)"
.br
.ti -1c
.RI "void \fBHAL_RTC_AlarmIRQHandler\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_PollForAlarmAEvent\fP (\fBRTC_HandleTypeDef\fP *hrtc, uint32_t Timeout)"
.br
.ti -1c
.RI "void \fBHAL_RTC_AlarmAEventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.RI "ALARM A Event Callback in non blocking mode "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_RTC_WaitForSynchro\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_RTCStateTypeDef\fP \fBHAL_RTC_GetState\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBRTC_EnterInitMode\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.ti -1c
.RI "uint8_t \fBRTC_ByteToBcd2\fP (uint8_t Value)"
.br
.ti -1c
.RI "uint8_t \fBRTC_Bcd2ToByte\fP (uint8_t Value)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of RTC HAL module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_rtc\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
