.TH "RCC_AHB1_Clock_Enable_Disable" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RCC_AHB1_Clock_Enable_Disable \- Enable or disable the AHB1 peripheral clock\&.  

.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOA_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOB_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOC_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOH_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DMA1_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DMA2_CLK_ENABLE\fP()"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOA_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOAEN))"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOB_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOBEN))"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOC_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOCEN))"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_GPIOH_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOHEN))"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DMA1_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_DMA1EN))"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DMA2_CLK_DISABLE\fP()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_DMA2EN))"
.br
.in -1c
.SH "详细描述"
.PP 
Enable or disable the AHB1 peripheral clock\&. 


.PP
\fB注解\fP
.RS 4
After reset, the peripheral clock (used for registers read/write access) is disabled and the application software has to enable this clock before using it\&. 
.RE
.PP

.SH "宏定义说明"
.PP 
.SS "#define __HAL_RCC_DMA1_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_DMA1EN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 434 行定义\&.
.SS "#define __HAL_RCC_DMA1_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA1EN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA1EN);\
                                        UNUSED(tmpreg); \
                                         } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 415 行定义\&.
.SS "#define __HAL_RCC_DMA2_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_DMA2EN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 435 行定义\&.
.SS "#define __HAL_RCC_DMA2_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2EN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_DMA2EN);\
                                        UNUSED(tmpreg); \
                                          } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 422 行定义\&.
.SS "#define __HAL_RCC_GPIOA_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOAEN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 430 行定义\&.
.SS "#define __HAL_RCC_GPIOA_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);\
                                        UNUSED(tmpreg); \
                                          } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 387 行定义\&.
.SS "#define __HAL_RCC_GPIOB_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOBEN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 431 行定义\&.
.SS "#define __HAL_RCC_GPIOB_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);\
                                        UNUSED(tmpreg); \
                                          } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 394 行定义\&.
.SS "#define __HAL_RCC_GPIOC_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOCEN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 432 行定义\&.
.SS "#define __HAL_RCC_GPIOC_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOCEN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOCEN);\
                                        UNUSED(tmpreg); \
                                          } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 401 行定义\&.
.SS "#define __HAL_RCC_GPIOH_CLK_DISABLE()   (RCC\->AHB1ENR &= ~(RCC_AHB1ENR_GPIOHEN))"

.PP
在文件 stm32f4xx_hal_rcc\&.h 第 433 行定义\&.
.SS "#define __HAL_RCC_GPIOH_CLK_ENABLE()"
\fB值:\fP
.PP
.nf
                                        do { \
                                        __IO uint32_t tmpreg = 0x00U; \
                                        SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOHEN);\
                                        /* Delay after an RCC peripheral clock enabling */ \
                                        tmpreg = READ_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOHEN);\
                                        UNUSED(tmpreg); \
                                         } while(0U)
.fi
.PP
在文件 stm32f4xx_hal_rcc\&.h 第 408 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
