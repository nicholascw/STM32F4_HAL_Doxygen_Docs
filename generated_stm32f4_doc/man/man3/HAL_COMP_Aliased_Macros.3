.TH "HAL_COMP_Aliased_Macros" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL_COMP_Aliased_Macros
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_RISING_IT_ENABLE\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_RISING_IT_DISABLE\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_FALLING_IT_ENABLE\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_FALLING_IT_DISABLE\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_ENABLE_IT\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_DISABLE_IT\fP(__EXTILINE__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_GET_FLAG\fP(__FLAG__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_EXTI_CLEAR_FLAG\fP(__FLAG__)"
.br
.ti -1c
.RI "#define \fB__HAL_COMP_GET_EXTI_LINE\fP   COMP_GET_EXTI_LINE"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define __HAL_COMP_EXTI_CLEAR_FLAG(__FLAG__)"
\fB值:\fP
.PP
.nf
                                                          (((__FLAG__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_CLEAR_FLAG() : \
                                                          __HAL_COMP_COMP2_EXTI_CLEAR_FLAG())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1762 行定义\&.
.SS "#define __HAL_COMP_EXTI_DISABLE_IT(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_DISABLE_IT() : \
                                                          __HAL_COMP_COMP2_EXTI_DISABLE_IT())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1758 行定义\&.
.SS "#define __HAL_COMP_EXTI_ENABLE_IT(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_ENABLE_IT() : \
                                                          __HAL_COMP_COMP2_EXTI_ENABLE_IT())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1756 行定义\&.
.SS "#define __HAL_COMP_EXTI_FALLING_IT_DISABLE(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_DISABLE_FALLING_EDGE() : \
                                                          __HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1754 行定义\&.
.SS "#define __HAL_COMP_EXTI_FALLING_IT_ENABLE(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_ENABLE_FALLING_EDGE() : \
                                                          __HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1752 行定义\&.
.SS "#define __HAL_COMP_EXTI_GET_FLAG(__FLAG__)"
\fB值:\fP
.PP
.nf
                                                          (((__FLAG__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_GET_FLAG() : \
                                                          __HAL_COMP_COMP2_EXTI_GET_FLAG())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1760 行定义\&.
.SS "#define __HAL_COMP_EXTI_RISING_IT_DISABLE(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_DISABLE_RISING_EDGE() : \
                                                          __HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1750 行定义\&.
.SS "#define __HAL_COMP_EXTI_RISING_IT_ENABLE(__EXTILINE__)"
\fB值:\fP
.PP
.nf
                                                          (((__EXTILINE__)  == COMP_EXTI_LINE_COMP1) ? __HAL_COMP_COMP1_EXTI_ENABLE_RISING_EDGE() : \
                                                          __HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE())
.fi
.PP
在文件 stm32_hal_legacy\&.h 第 1748 行定义\&.
.SS "#define __HAL_COMP_GET_EXTI_LINE   COMP_GET_EXTI_LINE"

.PP
在文件 stm32_hal_legacy\&.h 第 1766 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
