.TH "inc/stm32f4xx_hal_exti.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_exti.h \- Header file of EXTI HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBEXTI_HandleTypeDef\fP"
.br
.RI "EXTI Handle structure definition "
.ti -1c
.RI "struct \fBEXTI_ConfigTypeDef\fP"
.br
.RI "EXTI Configuration structure definition "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBEXTI_LINE_0\fP   EXTI_IMR_IM0"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_1\fP   EXTI_IMR_IM1"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_2\fP   EXTI_IMR_IM2"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_3\fP   EXTI_IMR_IM3"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_4\fP   EXTI_IMR_IM4"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_5\fP   EXTI_IMR_IM5"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_6\fP   EXTI_IMR_IM6"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_7\fP   EXTI_IMR_IM7"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_8\fP   EXTI_IMR_IM8"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_9\fP   EXTI_IMR_IM9"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_10\fP   EXTI_IMR_IM10"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_11\fP   EXTI_IMR_IM11"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_12\fP   EXTI_IMR_IM12"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_13\fP   EXTI_IMR_IM13"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_14\fP   EXTI_IMR_IM14"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_15\fP   EXTI_IMR_IM15"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_16\fP   EXTI_IMR_IM16"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_17\fP   EXTI_IMR_IM17"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_18\fP   EXTI_IMR_IM18"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_19\fP   EXTI_IMR_IM19"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_20\fP   EXTI_IMR_IM20"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_21\fP   EXTI_IMR_IM21"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_22\fP   EXTI_IMR_IM22"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_INTERRUPT\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_EVENT\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_RISING\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_FALLING\fP   0x0000000CU"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_RISING_FALLING\fP   0x00000010U"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_MASK\fP   (\fBEXTI_MODE_EVENT\fP | \fBEXTI_MODE_INTERRUPT\fP)"
.br
.RI "EXTI Mask for interrupt & event mode "
.ti -1c
.RI "#define \fBEXTI_TRIGGER_MASK\fP   (\fBEXTI_TRIGGER_RISING\fP | \fBEXTI_TRIGGER_FALLING\fP | \fBEXTI_TRIGGER_RISING_FALLING\fP)"
.br
.RI "EXTI Mask for trigger possibilities "
.ti -1c
.RI "#define \fBEXTI_LINE_NB\fP   23UL"
.br
.RI "EXTI Line number "
.ti -1c
.RI "#define \fBIS_EXTI_LINE\fP(__LINE__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_MODE\fP(__LINE__)   ((((__LINE__) & ~\fBEXTI_MODE_MASK\fP) == 0x00U))"
.br
.ti -1c
.RI "#define \fBIS_EXTI_TRIGGER\fP(__LINE__)   (((__LINE__) & ~\fBEXTI_TRIGGER_MASK\fP) == 0x00U)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_PENDING_EDGE\fP(__LINE__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_GPIO_PIN\fP(__PIN__)   ((__PIN__) < 16U)"
.br
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBEXTI_CallbackIDTypeDef\fP { \fBHAL_EXTI_COMMON_CB_ID\fP = 0x00U, \fBHAL_EXTI_RISING_CB_ID\fP = 0x01U, \fBHAL_EXTI_FALLING_CB_ID\fP = 0x02U }"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_SetConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_ConfigTypeDef\fP *pExtiConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_GetConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_ConfigTypeDef\fP *pExtiConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_ClearConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_RegisterCallback\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_CallbackIDTypeDef\fP CallbackID, void(*pPendingCbfn)(void))"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_GetHandle\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t ExtiLine)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_IRQHandler\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.ti -1c
.RI "uint32_t \fBHAL_EXTI_GetPending\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t Edge)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_ClearPending\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t Edge)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_GenerateSWI\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of EXTI HAL module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_exti\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
