.TH "inc/stm32f4xx_hal_wwdg.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal_wwdg.h \- Header file of WWDG HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_def\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBWWDG_InitTypeDef\fP"
.br
.RI "WWDG Init structure definition "
.ti -1c
.RI "struct \fBWWDG_HandleTypeDef\fP"
.br
.RI "WWDG handle Structure definition "
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBWWDG_IT_EWI\fP   WWDG_CFR_EWI"
.br
.ti -1c
.RI "#define \fBWWDG_FLAG_EWIF\fP   WWDG_SR_EWIF"
.br
.ti -1c
.RI "#define \fBWWDG_PRESCALER_1\fP   0x00000000u"
.br
.ti -1c
.RI "#define \fBWWDG_PRESCALER_2\fP   WWDG_CFR_WDGTB_0"
.br
.ti -1c
.RI "#define \fBWWDG_PRESCALER_4\fP   WWDG_CFR_WDGTB_1"
.br
.ti -1c
.RI "#define \fBWWDG_PRESCALER_8\fP   (WWDG_CFR_WDGTB_1 | WWDG_CFR_WDGTB_0)"
.br
.ti -1c
.RI "#define \fBWWDG_EWI_DISABLE\fP   0x00000000u"
.br
.ti -1c
.RI "#define \fBWWDG_EWI_ENABLE\fP   WWDG_CFR_EWI"
.br
.ti -1c
.RI "#define \fBIS_WWDG_PRESCALER\fP(__PRESCALER__)"
.br
.ti -1c
.RI "#define \fBIS_WWDG_WINDOW\fP(__WINDOW__)   (((__WINDOW__) >= WWDG_CFR_W_6) && ((__WINDOW__) <= WWDG_CFR_W))"
.br
.ti -1c
.RI "#define \fBIS_WWDG_COUNTER\fP(__COUNTER__)   (((__COUNTER__) >= WWDG_CR_T_6) && ((__COUNTER__) <= WWDG_CR_T))"
.br
.ti -1c
.RI "#define \fBIS_WWDG_EWI_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fB__HAL_WWDG_ENABLE\fP(__HANDLE__)   SET_BIT((__HANDLE__)\->Instance\->CR, WWDG_CR_WDGA)"
.br
.RI "Enable the WWDG peripheral\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_ENABLE_IT\fP(__HANDLE__,  __INTERRUPT__)   SET_BIT((__HANDLE__)\->Instance\->CFR, (__INTERRUPT__))"
.br
.RI "Enable the WWDG early wakeup interrupt\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_GET_IT\fP(__HANDLE__,  __INTERRUPT__)   \fB__HAL_WWDG_GET_FLAG\fP((__HANDLE__),(__INTERRUPT__))"
.br
.RI "Check whether the selected WWDG interrupt has occurred or not\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_CLEAR_IT\fP(__HANDLE__,  __INTERRUPT__)   \fB__HAL_WWDG_CLEAR_FLAG\fP((__HANDLE__), (__INTERRUPT__))"
.br
.RI "Clear the WWDG interrupt pending bits\&. bits to clear the selected interrupt pending bits\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_GET_FLAG\fP(__HANDLE__,  __FLAG__)   (((__HANDLE__)\->Instance\->SR & (__FLAG__)) == (__FLAG__))"
.br
.RI "Check whether the specified WWDG flag is set or not\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_CLEAR_FLAG\fP(__HANDLE__,  __FLAG__)   ((__HANDLE__)\->Instance\->SR = ~(__FLAG__))"
.br
.RI "Clear the WWDG's pending flags\&. "
.ti -1c
.RI "#define \fB__HAL_WWDG_GET_IT_SOURCE\fP(__HANDLE__,  __INTERRUPT__)   (((__HANDLE__)\->Instance\->CFR & (__INTERRUPT__)) == (__INTERRUPT__))"
.br
.RI "Check whether the specified WWDG interrupt source is enabled or not\&. "
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_WWDG_Init\fP (\fBWWDG_HandleTypeDef\fP *hwwdg)"
.br
.ti -1c
.RI "void \fBHAL_WWDG_MspInit\fP (\fBWWDG_HandleTypeDef\fP *hwwdg)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_WWDG_Refresh\fP (\fBWWDG_HandleTypeDef\fP *hwwdg)"
.br
.ti -1c
.RI "void \fBHAL_WWDG_IRQHandler\fP (\fBWWDG_HandleTypeDef\fP *hwwdg)"
.br
.ti -1c
.RI "void \fBHAL_WWDG_EarlyWakeupCallback\fP (\fBWWDG_HandleTypeDef\fP *hwwdg)"
.br
.in -1c
.SH "详细描述"
.PP 
Header file of WWDG HAL module\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2016 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_wwdg\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
