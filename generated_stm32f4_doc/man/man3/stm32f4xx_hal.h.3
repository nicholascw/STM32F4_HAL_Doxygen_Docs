.TH "inc/stm32f4xx_hal.h" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/stm32f4xx_hal.h \- This file contains all the functions prototypes for the HAL module driver\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal_conf\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM2\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM2_STOP))"
.br
.RI "Freeze/Unfreeze Peripherals in Debug mode "
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM3\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM3_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM4\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM4_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM5\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM5_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM6\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM6_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM7\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM7_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM12\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM12_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM13\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM13_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM14\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM14_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_RTC\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_RTC_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_WWDG\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_WWDG_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_IWDG\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_IWDG_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_I2C1_TIMEOUT\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_I2C2_TIMEOUT\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_I2C3_TIMEOUT\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_CAN1\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_CAN1_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_CAN2\fP()   (DBGMCU\->APB1FZ |= (DBGMCU_APB1_FZ_DBG_CAN2_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM1\fP()   (DBGMCU\->APB2FZ |= (DBGMCU_APB2_FZ_DBG_TIM1_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM8\fP()   (DBGMCU\->APB2FZ |= (DBGMCU_APB2_FZ_DBG_TIM8_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM9\fP()   (DBGMCU\->APB2FZ |= (DBGMCU_APB2_FZ_DBG_TIM9_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM10\fP()   (DBGMCU\->APB2FZ |= (DBGMCU_APB2_FZ_DBG_TIM10_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_FREEZE_TIM11\fP()   (DBGMCU\->APB2FZ |= (DBGMCU_APB2_FZ_DBG_TIM11_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM2\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM2_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM3\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM3_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM4\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM4_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM5\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM5_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM6\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM6_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM7\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM7_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM12\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM12_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM13\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM13_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM14\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_TIM14_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_RTC\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_RTC_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_WWDG\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_WWDG_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_IWDG\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_IWDG_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_I2C1_TIMEOUT\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_I2C2_TIMEOUT\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_I2C3_TIMEOUT\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_CAN1\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_CAN1_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_CAN2\fP()   (DBGMCU\->APB1FZ &= ~(DBGMCU_APB1_FZ_DBG_CAN2_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM1\fP()   (DBGMCU\->APB2FZ &= ~(DBGMCU_APB2_FZ_DBG_TIM1_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM8\fP()   (DBGMCU\->APB2FZ &= ~(DBGMCU_APB2_FZ_DBG_TIM8_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM9\fP()   (DBGMCU\->APB2FZ &= ~(DBGMCU_APB2_FZ_DBG_TIM9_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM10\fP()   (DBGMCU\->APB2FZ &= ~(DBGMCU_APB2_FZ_DBG_TIM10_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_DBGMCU_UNFREEZE_TIM11\fP()   (DBGMCU\->APB2FZ &= ~(DBGMCU_APB2_FZ_DBG_TIM11_STOP))"
.br
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_FLASH\fP()   (SYSCFG\->MEMRMP &= ~(SYSCFG_MEMRMP_MEM_MODE))"
.br
.RI "Main Flash memory mapped at 0x00000000 "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_SYSTEMFLASH\fP()"
.br
.RI "System Flash memory mapped at 0x00000000 "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_SRAM\fP()"
.br
.RI "Embedded SRAM mapped at 0x00000000 "
.ti -1c
.RI "#define \fBIS_TICKFREQ\fP(FREQ)"
.br
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBHAL_TickFreqTypeDef\fP { \fBHAL_TICK_FREQ_10HZ\fP = 100U, \fBHAL_TICK_FREQ_100HZ\fP = 10U, \fBHAL_TICK_FREQ_1KHZ\fP = 1U, \fBHAL_TICK_FREQ_DEFAULT\fP = HAL_TICK_FREQ_1KHZ }"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_Init\fP (void)"
.br
.RI "This function is used to initialize the HAL Library; it must be the first instruction to be executed in the main program (before to call any other HAL function), it performs the following: Configure the Flash prefetch, instruction and Data caches\&. Configures the SysTick to generate an interrupt each 1 millisecond, which is clocked by the HSI (at this stage, the clock is not yet configured and thus the system is running from the internal HSI at 16 MHz)\&. Set NVIC Group Priority to 4\&. Calls the \fBHAL_MspInit()\fP callback function defined in user file 'stm32f4xx_hal_msp\&.c' to do the global low level hardware initialization "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_DeInit\fP (void)"
.br
.RI "This function de-Initializes common part of the HAL and stops the systick\&. This function is optional\&. 
.br
 "
.ti -1c
.RI "void \fBHAL_MspInit\fP (void)"
.br
.RI "Initialize the MSP\&. "
.ti -1c
.RI "void \fBHAL_MspDeInit\fP (void)"
.br
.RI "DeInitializes the MSP\&. "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_InitTick\fP (uint32_t TickPriority)"
.br
.RI "This function configures the source of the time base\&. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority\&. "
.ti -1c
.RI "void \fBHAL_IncTick\fP (void)"
.br
.RI "This function is called to increment a global variable 'uwTick' used as application time base\&. "
.ti -1c
.RI "void \fBHAL_Delay\fP (uint32_t Delay)"
.br
.RI "This function provides minimum delay (in milliseconds) based on variable incremented\&. "
.ti -1c
.RI "uint32_t \fBHAL_GetTick\fP (void)"
.br
.RI "Provides a tick value in millisecond\&. "
.ti -1c
.RI "uint32_t \fBHAL_GetTickPrio\fP (void)"
.br
.RI "This function returns a tick priority\&. "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_SetTickFreq\fP (\fBHAL_TickFreqTypeDef\fP Freq)"
.br
.RI "Set new tick Freq\&. "
.ti -1c
.RI "\fBHAL_TickFreqTypeDef\fP \fBHAL_GetTickFreq\fP (void)"
.br
.RI "Return tick frequency\&. "
.ti -1c
.RI "void \fBHAL_SuspendTick\fP (void)"
.br
.RI "Suspend Tick increment\&. "
.ti -1c
.RI "void \fBHAL_ResumeTick\fP (void)"
.br
.RI "Resume Tick increment\&. "
.ti -1c
.RI "uint32_t \fBHAL_GetHalVersion\fP (void)"
.br
.RI "Returns the HAL revision "
.ti -1c
.RI "uint32_t \fBHAL_GetREVID\fP (void)"
.br
.RI "Returns the device revision identifier\&. "
.ti -1c
.RI "uint32_t \fBHAL_GetDEVID\fP (void)"
.br
.RI "Returns the device identifier\&. "
.ti -1c
.RI "void \fBHAL_DBGMCU_EnableDBGSleepMode\fP (void)"
.br
.RI "Enable the Debug Module during SLEEP mode "
.ti -1c
.RI "void \fBHAL_DBGMCU_DisableDBGSleepMode\fP (void)"
.br
.RI "Disable the Debug Module during SLEEP mode "
.ti -1c
.RI "void \fBHAL_DBGMCU_EnableDBGStopMode\fP (void)"
.br
.RI "Enable the Debug Module during STOP mode "
.ti -1c
.RI "void \fBHAL_DBGMCU_DisableDBGStopMode\fP (void)"
.br
.RI "Disable the Debug Module during STOP mode "
.ti -1c
.RI "void \fBHAL_DBGMCU_EnableDBGStandbyMode\fP (void)"
.br
.RI "Enable the Debug Module during STANDBY mode "
.ti -1c
.RI "void \fBHAL_DBGMCU_DisableDBGStandbyMode\fP (void)"
.br
.RI "Disable the Debug Module during STANDBY mode "
.ti -1c
.RI "void \fBHAL_EnableCompensationCell\fP (void)"
.br
.RI "Enables the I/O Compensation Cell\&. "
.ti -1c
.RI "void \fBHAL_DisableCompensationCell\fP (void)"
.br
.RI "Power-down the I/O Compensation Cell\&. "
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw0\fP (void)"
.br
.RI "Returns first word of the unique device identifier (UID based on 96 bits) "
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw1\fP (void)"
.br
.RI "Returns second word of the unique device identifier (UID based on 96 bits) "
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw2\fP (void)"
.br
.RI "Returns third word of the unique device identifier (UID based on 96 bits) "
.in -1c
.SH "详细描述"
.PP 
This file contains all the functions prototypes for the HAL module driver\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal\&.h\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
