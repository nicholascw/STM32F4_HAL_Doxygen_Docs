.TH "__SPI_HandleTypeDef" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__SPI_HandleTypeDef \- SPI handle Structure definition  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <stm32f4xx_hal_spi\&.h>\fP
.SS "成员变量"

.in +1c
.ti -1c
.RI "SPI_TypeDef * \fBInstance\fP"
.br
.ti -1c
.RI "\fBSPI_InitTypeDef\fP \fBInit\fP"
.br
.ti -1c
.RI "uint8_t * \fBpTxBuffPtr\fP"
.br
.ti -1c
.RI "uint16_t \fBTxXferSize\fP"
.br
.ti -1c
.RI "__IO uint16_t \fBTxXferCount\fP"
.br
.ti -1c
.RI "uint8_t * \fBpRxBuffPtr\fP"
.br
.ti -1c
.RI "uint16_t \fBRxXferSize\fP"
.br
.ti -1c
.RI "__IO uint16_t \fBRxXferCount\fP"
.br
.ti -1c
.RI "void(* \fBRxISR\fP )(struct \fB__SPI_HandleTypeDef\fP *hspi)"
.br
.ti -1c
.RI "void(* \fBTxISR\fP )(struct \fB__SPI_HandleTypeDef\fP *hspi)"
.br
.ti -1c
.RI "\fBDMA_HandleTypeDef\fP * \fBhdmatx\fP"
.br
.ti -1c
.RI "\fBDMA_HandleTypeDef\fP * \fBhdmarx\fP"
.br
.ti -1c
.RI "\fBHAL_LockTypeDef\fP \fBLock\fP"
.br
.ti -1c
.RI "__IO \fBHAL_SPI_StateTypeDef\fP \fBState\fP"
.br
.ti -1c
.RI "__IO uint32_t \fBErrorCode\fP"
.br
.in -1c
.SH "详细描述"
.PP 
SPI handle Structure definition 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 105 行定义\&.
.SH "结构体成员变量说明"
.PP 
.SS "__IO uint32_t ErrorCode"
SPI Error code 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 135 行定义\&.
.SS "\fBDMA_HandleTypeDef\fP* hdmarx"
SPI Rx DMA Handle parameters 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 129 行定义\&.
.SS "\fBDMA_HandleTypeDef\fP* hdmatx"
SPI Tx DMA Handle parameters 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 127 行定义\&.
.SS "\fBSPI_InitTypeDef\fP Init"
SPI communication parameters 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 109 行定义\&.
.SS "SPI_TypeDef* Instance"
SPI registers base address 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 107 行定义\&.
.SS "\fBHAL_LockTypeDef\fP Lock"
Locking object 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 131 行定义\&.
.SS "uint8_t* pRxBuffPtr"
Pointer to SPI Rx transfer Buffer 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 117 行定义\&.
.SS "uint8_t* pTxBuffPtr"
Pointer to SPI Tx transfer Buffer 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 111 行定义\&.
.SS "void(* RxISR) (struct \fB__SPI_HandleTypeDef\fP *hspi)"
function pointer on Rx ISR 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 123 行定义\&.
.SS "__IO uint16_t RxXferCount"
SPI Rx Transfer Counter 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 121 行定义\&.
.SS "uint16_t RxXferSize"
SPI Rx Transfer size 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 119 行定义\&.
.SS "__IO \fBHAL_SPI_StateTypeDef\fP State"
SPI communication state 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 133 行定义\&.
.SS "void(* TxISR) (struct \fB__SPI_HandleTypeDef\fP *hspi)"
function pointer on Tx ISR 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 125 行定义\&.
.SS "__IO uint16_t TxXferCount"
SPI Tx Transfer Counter 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 115 行定义\&.
.SS "uint16_t TxXferSize"
SPI Tx Transfer size 
.br
 
.PP
在文件 stm32f4xx_hal_spi\&.h 第 113 行定义\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
