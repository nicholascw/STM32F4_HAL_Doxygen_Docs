.TH "HAL_CAN_Aliased_Defines" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL_CAN_Aliased_Defines
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBCAN_FilterFIFO0\fP   CAN_FILTER_FIFO0"
.br
.ti -1c
.RI "#define \fBCAN_FilterFIFO1\fP   CAN_FILTER_FIFO1"
.br
.ti -1c
.RI "#define \fBCAN_IT_RQCP0\fP   CAN_IT_TME"
.br
.ti -1c
.RI "#define \fBCAN_IT_RQCP1\fP   CAN_IT_TME"
.br
.ti -1c
.RI "#define \fBCAN_IT_RQCP2\fP   CAN_IT_TME"
.br
.ti -1c
.RI "#define \fBINAK_TIMEOUT\fP   CAN_TIMEOUT_VALUE"
.br
.ti -1c
.RI "#define \fBSLAK_TIMEOUT\fP   CAN_TIMEOUT_VALUE"
.br
.ti -1c
.RI "#define \fBCAN_TXSTATUS_FAILED\fP   ((uint8_t)0x00U)"
.br
.ti -1c
.RI "#define \fBCAN_TXSTATUS_OK\fP   ((uint8_t)0x01U)"
.br
.ti -1c
.RI "#define \fBCAN_TXSTATUS_PENDING\fP   ((uint8_t)0x02U)"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define CAN_FilterFIFO0   CAN_FILTER_FIFO0"

.PP
在文件 stm32_hal_legacy\&.h 第 1044 行定义\&.
.SS "#define CAN_FilterFIFO1   CAN_FILTER_FIFO1"

.PP
在文件 stm32_hal_legacy\&.h 第 1045 行定义\&.
.SS "#define CAN_IT_RQCP0   CAN_IT_TME"

.PP
在文件 stm32_hal_legacy\&.h 第 1046 行定义\&.
.SS "#define CAN_IT_RQCP1   CAN_IT_TME"

.PP
在文件 stm32_hal_legacy\&.h 第 1047 行定义\&.
.SS "#define CAN_IT_RQCP2   CAN_IT_TME"

.PP
在文件 stm32_hal_legacy\&.h 第 1048 行定义\&.
.SS "#define CAN_TXSTATUS_FAILED   ((uint8_t)0x00U)"

.PP
在文件 stm32_hal_legacy\&.h 第 1051 行定义\&.
.SS "#define CAN_TXSTATUS_OK   ((uint8_t)0x01U)"

.PP
在文件 stm32_hal_legacy\&.h 第 1052 行定义\&.
.SS "#define CAN_TXSTATUS_PENDING   ((uint8_t)0x02U)"

.PP
在文件 stm32_hal_legacy\&.h 第 1053 行定义\&.
.SS "#define INAK_TIMEOUT   CAN_TIMEOUT_VALUE"

.PP
在文件 stm32_hal_legacy\&.h 第 1049 行定义\&.
.SS "#define SLAK_TIMEOUT   CAN_TIMEOUT_VALUE"

.PP
在文件 stm32_hal_legacy\&.h 第 1050 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
