.TH "src/stm32f4xx_hal_rng.c" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/stm32f4xx_hal_rng.c \- RNG HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Random Number Generator (RNG) peripheral:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_hal\&.h'\fP
.br

.SH "详细描述"
.PP 
RNG HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Random Number Generator (RNG) peripheral: 


.PP
\fB作者\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
Initialization and configuration functions
.IP "\(bu" 2
Peripheral Control functions
.IP "\(bu" 2
Peripheral State functions
.PP
.RE
.PP
.PP
.nf
==============================================================================
                   ##### How to use this driver #####
==============================================================================
[..]
    The RNG HAL driver can be used as follows:

    (#) Enable the RNG controller clock using __HAL_RCC_RNG_CLK_ENABLE() macro
        in HAL_RNG_MspInit().
    (#) Activate the RNG peripheral using HAL_RNG_Init() function.
    (#) Wait until the 32 bit Random Number Generator contains a valid
        random data using (polling/interrupt) mode.
    (#) Get the 32 bit random number using HAL_RNG_GenerateRandomNumber() function.

  ##### Callback registration #####
  ==================================

  [..]
  The compilation define USE_HAL_RNG_REGISTER_CALLBACKS when set to 1
  allows the user to configure dynamically the driver callbacks.

  [..]
  Use Function @ref HAL_RNG_RegisterCallback() to register a user callback.
  Function @ref HAL_RNG_RegisterCallback() allows to register following callbacks:
  (+) ErrorCallback             : RNG Error Callback.
  (+) MspInitCallback           : RNG MspInit.
  (+) MspDeInitCallback         : RNG MspDeInit.
  This function takes as parameters the HAL peripheral handle, the Callback ID
  and a pointer to the user callback function.

  [..]
  Use function @ref HAL_RNG_UnRegisterCallback() to reset a callback to the default
  weak (surcharged) function.
  @ref HAL_RNG_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  and the Callback ID.
  This function allows to reset following callbacks:
  (+) ErrorCallback             : RNG Error Callback.
  (+) MspInitCallback           : RNG MspInit.
  (+) MspDeInitCallback         : RNG MspDeInit.

  [..]
  For specific callback ReadyDataCallback, use dedicated register callbacks:
  respectively @ref HAL_RNG_RegisterReadyDataCallback() , @ref HAL_RNG_UnRegisterReadyDataCallback().

  [..]
  By default, after the @ref HAL_RNG_Init() and when the state is HAL_RNG_STATE_RESET
  all callbacks are set to the corresponding weak (surcharged) functions:
  example @ref HAL_RNG_ErrorCallback().
  Exception done for MspInit and MspDeInit functions that are respectively
  reset to the legacy weak (surcharged) functions in the @ref HAL_RNG_Init()
  and @ref HAL_RNG_DeInit() only when these callbacks are null (not registered beforehand).
  If not, MspInit or MspDeInit are not null, the @ref HAL_RNG_Init() and @ref HAL_RNG_DeInit()
  keep and use the user MspInit/MspDeInit callbacks (registered beforehand).

  [..]
  Callbacks can be registered/unregistered in HAL_RNG_STATE_READY state only.
  Exception done MspInit/MspDeInit that can be registered/unregistered
  in HAL_RNG_STATE_READY or HAL_RNG_STATE_RESET state, thus registered (user)
  MspInit/DeInit callbacks can be used during the Init/DeInit.
  In that case first register the MspInit/MspDeInit user callbacks
  using @ref HAL_RNG_RegisterCallback() before calling @ref HAL_RNG_DeInit()
  or @ref HAL_RNG_Init() function.

  [..]
  When The compilation define USE_HAL_RNG_REGISTER_CALLBACKS is set to 0 or
  not defined, the callback registration feature is not available
  and weak (surcharged) callbacks are used..fi
.PP
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2016 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_hal_rng\&.c\fP 中定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
