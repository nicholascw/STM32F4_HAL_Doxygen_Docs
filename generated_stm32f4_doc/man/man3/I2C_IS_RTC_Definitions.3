.TH "I2C_IS_RTC_Definitions" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
I2C_IS_RTC_Definitions
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBIS_I2C_DUTY_CYCLE\fP(CYCLE)"
.br
.ti -1c
.RI "#define \fBIS_I2C_ADDRESSING_MODE\fP(ADDRESS)"
.br
.ti -1c
.RI "#define \fBIS_I2C_DUAL_ADDRESS\fP(ADDRESS)"
.br
.ti -1c
.RI "#define \fBIS_I2C_GENERAL_CALL\fP(CALL)"
.br
.ti -1c
.RI "#define \fBIS_I2C_NO_STRETCH\fP(STRETCH)"
.br
.ti -1c
.RI "#define \fBIS_I2C_MEMADD_SIZE\fP(SIZE)"
.br
.ti -1c
.RI "#define \fBIS_I2C_CLOCK_SPEED\fP(SPEED)   (((SPEED) > 0U) && ((SPEED) <= 400000U))"
.br
.ti -1c
.RI "#define \fBIS_I2C_OWN_ADDRESS1\fP(ADDRESS1)   (((ADDRESS1) & 0xFFFFFC00U) == 0U)"
.br
.ti -1c
.RI "#define \fBIS_I2C_OWN_ADDRESS2\fP(ADDRESS2)   (((ADDRESS2) & 0xFFFFFF01U) == 0U)"
.br
.ti -1c
.RI "#define \fBIS_I2C_TRANSFER_OPTIONS_REQUEST\fP(REQUEST)"
.br
.ti -1c
.RI "#define \fBIS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST\fP(REQUEST)"
.br
.ti -1c
.RI "#define \fBI2C_CHECK_FLAG\fP(__ISR__,  __FLAG__)   ((((__ISR__) & ((__FLAG__) & \fBI2C_FLAG_MASK\fP)) == ((__FLAG__) & \fBI2C_FLAG_MASK\fP)) ? SET : RESET)"
.br
.ti -1c
.RI "#define \fBI2C_CHECK_IT_SOURCE\fP(__CR1__,  __IT__)   ((((__CR1__) & (__IT__)) == (__IT__)) ? SET : RESET)"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define I2C_CHECK_FLAG(__ISR__, __FLAG__)   ((((__ISR__) & ((__FLAG__) & \fBI2C_FLAG_MASK\fP)) == ((__FLAG__) & \fBI2C_FLAG_MASK\fP)) ? SET : RESET)"

.PP
在文件 stm32f4xx_hal_i2c\&.h 第 705 行定义\&.
.SS "#define I2C_CHECK_IT_SOURCE(__CR1__, __IT__)   ((((__CR1__) & (__IT__)) == (__IT__)) ? SET : RESET)"

.PP
在文件 stm32f4xx_hal_i2c\&.h 第 706 行定义\&.
.SS "#define IS_I2C_ADDRESSING_MODE(ADDRESS)"
\fB值:\fP
.PP
.nf
                                         (((ADDRESS) == I2C_ADDRESSINGMODE_7BIT) || \
                                         ((ADDRESS) == I2C_ADDRESSINGMODE_10BIT))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 681 行定义\&.
.SS "#define IS_I2C_CLOCK_SPEED(SPEED)   (((SPEED) > 0U) && ((SPEED) <= 400000U))"

.PP
在文件 stm32f4xx_hal_i2c\&.h 第 691 行定义\&.
.SS "#define IS_I2C_DUAL_ADDRESS(ADDRESS)"
\fB值:\fP
.PP
.nf
                                      (((ADDRESS) == I2C_DUALADDRESS_DISABLE) || \
                                      ((ADDRESS) == I2C_DUALADDRESS_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 683 行定义\&.
.SS "#define IS_I2C_DUTY_CYCLE(CYCLE)"
\fB值:\fP
.PP
.nf
                                  (((CYCLE) == I2C_DUTYCYCLE_2) || \
                                  ((CYCLE) == I2C_DUTYCYCLE_16_9))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 679 行定义\&.
.SS "#define IS_I2C_GENERAL_CALL(CALL)"
\fB值:\fP
.PP
.nf
                                   (((CALL) == I2C_GENERALCALL_DISABLE) || \
                                   ((CALL) == I2C_GENERALCALL_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 685 行定义\&.
.SS "#define IS_I2C_MEMADD_SIZE(SIZE)"
\fB值:\fP
.PP
.nf
                                  (((SIZE) == I2C_MEMADD_SIZE_8BIT) || \
                                  ((SIZE) == I2C_MEMADD_SIZE_16BIT))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 689 行定义\&.
.SS "#define IS_I2C_NO_STRETCH(STRETCH)"
\fB值:\fP
.PP
.nf
                                    (((STRETCH) == I2C_NOSTRETCH_DISABLE) || \
                                    ((STRETCH) == I2C_NOSTRETCH_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 687 行定义\&.
.SS "#define IS_I2C_OWN_ADDRESS1(ADDRESS1)   (((ADDRESS1) & 0xFFFFFC00U) == 0U)"

.PP
在文件 stm32f4xx_hal_i2c\&.h 第 692 行定义\&.
.SS "#define IS_I2C_OWN_ADDRESS2(ADDRESS2)   (((ADDRESS2) & 0xFFFFFF01U) == 0U)"

.PP
在文件 stm32f4xx_hal_i2c\&.h 第 693 行定义\&.
.SS "#define IS_I2C_TRANSFER_OPTIONS_REQUEST(REQUEST)"
\fB值:\fP
.PP
.nf
                                                       (((REQUEST) == I2C_FIRST_FRAME)              || \
                                                       ((REQUEST) == I2C_FIRST_AND_NEXT_FRAME)     || \
                                                       ((REQUEST) == I2C_NEXT_FRAME)               || \
                                                       ((REQUEST) == I2C_FIRST_AND_LAST_FRAME)     || \
                                                       ((REQUEST) == I2C_LAST_FRAME)               || \
                                                       ((REQUEST) == I2C_LAST_FRAME_NO_STOP)       || \
                                                       IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(REQUEST))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 694 行定义\&.
.SS "#define IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(REQUEST)"
\fB值:\fP
.PP
.nf
                                                        (((REQUEST) == I2C_OTHER_FRAME)     || \
                                                        ((REQUEST) == I2C_OTHER_AND_LAST_FRAME))
.fi
.PP
在文件 stm32f4xx_hal_i2c\&.h 第 702 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
