.TH "SMBUS_Private_Macros" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SMBUS_Private_Macros
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBSMBUS_FREQRANGE\fP(__PCLK__)   ((__PCLK__)/1000000U)"
.br
.ti -1c
.RI "#define \fBSMBUS_RISE_TIME\fP(__FREQRANGE__)   ( ((__FREQRANGE__) + 1U))"
.br
.ti -1c
.RI "#define \fBSMBUS_SPEED_STANDARD\fP(__PCLK__,  __SPEED__)   (((((__PCLK__)/((__SPEED__) << 1U)) & I2C_CCR_CCR) < 4U)? 4U:((__PCLK__) / ((__SPEED__) << 1U)))"
.br
.ti -1c
.RI "#define \fBSMBUS_7BIT_ADD_WRITE\fP(__ADDRESS__)   ((uint8_t)((__ADDRESS__) & (~I2C_OAR1_ADD0)))"
.br
.ti -1c
.RI "#define \fBSMBUS_7BIT_ADD_READ\fP(__ADDRESS__)   ((uint8_t)((__ADDRESS__) | I2C_OAR1_ADD0))"
.br
.ti -1c
.RI "#define \fBSMBUS_10BIT_ADDRESS\fP(__ADDRESS__)   ((uint8_t)((uint16_t)((__ADDRESS__) & (uint16_t)0x00FF)))"
.br
.ti -1c
.RI "#define \fBSMBUS_10BIT_HEADER_WRITE\fP(__ADDRESS__)   ((uint8_t)((uint16_t)((uint16_t)(((uint16_t)((__ADDRESS__) & (uint16_t)0x0300)) >> 7) | (uint16_t)0x00F0)))"
.br
.ti -1c
.RI "#define \fBSMBUS_10BIT_HEADER_READ\fP(__ADDRESS__)   ((uint8_t)((uint16_t)((uint16_t)(((uint16_t)((__ADDRESS__) & (uint16_t)0x0300)) >> 7) | (uint16_t)(0x00F1))))"
.br
.ti -1c
.RI "#define \fBSMBUS_GET_PEC_MODE\fP(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1 & I2C_CR1_ENPEC)"
.br
.ti -1c
.RI "#define \fBSMBUS_GET_PEC_VALUE\fP(__HANDLE__)   ((__HANDLE__)\->XferPEC)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_ADDRESSING_MODE\fP(ADDRESS)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_DUAL_ADDRESS\fP(ADDRESS)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_GENERAL_CALL\fP(CALL)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_NO_STRETCH\fP(STRETCH)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_PEC\fP(PEC)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_PERIPHERAL_MODE\fP(MODE)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_CLOCK_SPEED\fP(SPEED)   (((SPEED) > 0U) && ((SPEED) <= 100000U))"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_OWN_ADDRESS1\fP(ADDRESS1)   (((ADDRESS1) & 0xFFFFFC00U) == 0U)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_OWN_ADDRESS2\fP(ADDRESS2)   (((ADDRESS2) & 0xFFFFFF01U) == 0U)"
.br
.ti -1c
.RI "#define \fBIS_SMBUS_TRANSFER_OPTIONS_REQUEST\fP(REQUEST)"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define IS_SMBUS_ADDRESSING_MODE(ADDRESS)"
\fB值:\fP
.PP
.nf
                                                    (((ADDRESS) == SMBUS_ADDRESSINGMODE_7BIT) || \
                                                    ((ADDRESS) == SMBUS_ADDRESSINGMODE_10BIT))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 670 行定义\&.
.SS "#define IS_SMBUS_CLOCK_SPEED(SPEED)   (((SPEED) > 0U) && ((SPEED) <= 100000U))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 689 行定义\&.
.SS "#define IS_SMBUS_DUAL_ADDRESS(ADDRESS)"
\fB值:\fP
.PP
.nf
                                                    (((ADDRESS) == SMBUS_DUALADDRESS_DISABLE) || \
                                                    ((ADDRESS) == SMBUS_DUALADDRESS_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 673 行定义\&.
.SS "#define IS_SMBUS_GENERAL_CALL(CALL)"
\fB值:\fP
.PP
.nf
                                                    (((CALL) == SMBUS_GENERALCALL_DISABLE)    || \
                                                    ((CALL) == SMBUS_GENERALCALL_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 676 行定义\&.
.SS "#define IS_SMBUS_NO_STRETCH(STRETCH)"
\fB值:\fP
.PP
.nf
                                                    (((STRETCH) == SMBUS_NOSTRETCH_DISABLE)   || \
                                                    ((STRETCH) == SMBUS_NOSTRETCH_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 679 行定义\&.
.SS "#define IS_SMBUS_OWN_ADDRESS1(ADDRESS1)   (((ADDRESS1) & 0xFFFFFC00U) == 0U)"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 691 行定义\&.
.SS "#define IS_SMBUS_OWN_ADDRESS2(ADDRESS2)   (((ADDRESS2) & 0xFFFFFF01U) == 0U)"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 693 行定义\&.
.SS "#define IS_SMBUS_PEC(PEC)"
\fB值:\fP
.PP
.nf
                                                     (((PEC) == SMBUS_PEC_DISABLE) || \
                                                     ((PEC) == SMBUS_PEC_ENABLE))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 682 行定义\&.
.SS "#define IS_SMBUS_PERIPHERAL_MODE(MODE)"
\fB值:\fP
.PP
.nf
                                                    (((MODE) == SMBUS_PERIPHERAL_MODE_SMBUS_HOST)      || \
                                                    ((MODE) == SMBUS_PERIPHERAL_MODE_SMBUS_SLAVE)     || \
                                                    ((MODE) == SMBUS_PERIPHERAL_MODE_SMBUS_SLAVE_ARP))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 685 行定义\&.
.SS "#define IS_SMBUS_TRANSFER_OPTIONS_REQUEST(REQUEST)"
\fB值:\fP
.PP
.nf
                                                    (((REQUEST) == SMBUS_FIRST_FRAME)                   || \
                                                    ((REQUEST) == SMBUS_NEXT_FRAME)                    || \
                                                    ((REQUEST) == SMBUS_FIRST_AND_LAST_FRAME_NO_PEC)   || \
                                                    ((REQUEST) == SMBUS_LAST_FRAME_NO_PEC)             || \
                                                    ((REQUEST) == SMBUS_FIRST_AND_LAST_FRAME_WITH_PEC) || \
                                                    ((REQUEST) == SMBUS_LAST_FRAME_WITH_PEC))
.fi
.PP
在文件 stm32f4xx_hal_smbus\&.h 第 695 行定义\&.
.SS "#define SMBUS_10BIT_ADDRESS(__ADDRESS__)   ((uint8_t)((uint16_t)((__ADDRESS__) & (uint16_t)0x00FF)))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 655 行定义\&.
.SS "#define SMBUS_10BIT_HEADER_READ(__ADDRESS__)   ((uint8_t)((uint16_t)((uint16_t)(((uint16_t)((__ADDRESS__) & (uint16_t)0x0300)) >> 7) | (uint16_t)(0x00F1))))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 659 行定义\&.
.SS "#define SMBUS_10BIT_HEADER_WRITE(__ADDRESS__)   ((uint8_t)((uint16_t)((uint16_t)(((uint16_t)((__ADDRESS__) & (uint16_t)0x0300)) >> 7) | (uint16_t)0x00F0)))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 657 行定义\&.
.SS "#define SMBUS_7BIT_ADD_READ(__ADDRESS__)   ((uint8_t)((__ADDRESS__) | I2C_OAR1_ADD0))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 653 行定义\&.
.SS "#define SMBUS_7BIT_ADD_WRITE(__ADDRESS__)   ((uint8_t)((__ADDRESS__) & (~I2C_OAR1_ADD0)))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 651 行定义\&.
.SS "#define SMBUS_FREQRANGE(__PCLK__)   ((__PCLK__)/1000000U)"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 645 行定义\&.
.SS "#define SMBUS_GET_PEC_MODE(__HANDLE__)   ((__HANDLE__)\->Instance\->CR1 & I2C_CR1_ENPEC)"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 661 行定义\&.
.SS "#define SMBUS_GET_PEC_VALUE(__HANDLE__)   ((__HANDLE__)\->XferPEC)"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 663 行定义\&.
.SS "#define SMBUS_RISE_TIME(__FREQRANGE__)   ( ((__FREQRANGE__) + 1U))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 647 行定义\&.
.SS "#define SMBUS_SPEED_STANDARD(__PCLK__, __SPEED__)   (((((__PCLK__)/((__SPEED__) << 1U)) & I2C_CCR_CCR) < 4U)? 4U:((__PCLK__) / ((__SPEED__) << 1U)))"

.PP
在文件 stm32f4xx_hal_smbus\&.h 第 649 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
