.TH "HAL_TimeBase_RTC_Alarm_Template" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL_TimeBase_RTC_Alarm_Template
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBRTC_CLOCK_SOURCE_HSE\fP"
.br
.ti -1c
.RI "#define \fBRTC_ASYNCH_PREDIV\fP   99U"
.br
.ti -1c
.RI "#define \fBRTC_SYNCH_PREDIV\fP   9U"
.br
.ti -1c
.RI "#define \fBRCC_RTCCLKSOURCE_1MHZ\fP   ((uint32_t)((uint32_t)RCC_BDCR_RTCSEL | (uint32_t)((\fBHSE_VALUE\fP/1000000U) << 16U)))"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "void \fBRTC_Alarm_IRQHandler\fP (void)"
.br
.RI "This function handles RTC ALARM interrupt request\&. "
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_InitTick\fP (uint32_t TickPriority)"
.br
.RI "This function configures the RTC_ALARMA as a time base source\&. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority\&. "
.ti -1c
.RI "void \fBHAL_SuspendTick\fP (void)"
.br
.RI "Suspend Tick increment\&. "
.ti -1c
.RI "void \fBHAL_ResumeTick\fP (void)"
.br
.RI "Resume Tick increment\&. "
.ti -1c
.RI "void \fBHAL_RTC_AlarmAEventCallback\fP (\fBRTC_HandleTypeDef\fP *hrtc)"
.br
.RI "ALARM A Event Callback in non blocking mode "
.in -1c
.SS "变量"

.in +1c
.ti -1c
.RI "\fBRTC_HandleTypeDef\fP \fBhRTC_Handle\fP"
.br
.in -1c
.SH "详细描述"
.PP 

.SH "宏定义说明"
.PP 
.SS "#define RCC_RTCCLKSOURCE_1MHZ   ((uint32_t)((uint32_t)RCC_BDCR_RTCSEL | (uint32_t)((\fBHSE_VALUE\fP/1000000U) << 16U)))"

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 74 行定义\&.
.SS "#define RTC_ASYNCH_PREDIV   99U"

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 72 行定义\&.
.SS "#define RTC_CLOCK_SOURCE_HSE"

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 67 行定义\&.
.SS "#define RTC_SYNCH_PREDIV   9U"

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 73 行定义\&.
.SH "函数说明"
.PP 
.SS "\fBHAL_StatusTypeDef\fP HAL_InitTick (uint32_t TickPriority)"

.PP
This function configures the RTC_ALARMA as a time base source\&. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority\&. 
.PP
\fB注解\fP
.RS 4
This function is called automatically at the beginning of program after reset by \fBHAL_Init()\fP or at any time when clock is configured, by \fBHAL_RCC_ClockConfig()\fP\&. 
.RE
.PP
\fB参数\fP
.RS 4
\fITickPriority\fP Tick interrupt priority\&. 
.RE
.PP
\fB返回值\fP
.RS 4
\fIHAL\fP status 
.RE
.PP

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 95 行定义\&.
.SS "void HAL_ResumeTick (void)"

.PP
Resume Tick increment\&. 
.PP
\fB注解\fP
.RS 4
Enable the tick increment by Enabling RTC ALARM interrupt\&. 
.RE
.PP
\fB返回值\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 233 行定义\&.
.SS "void HAL_RTC_AlarmAEventCallback (\fBRTC_HandleTypeDef\fP * hrtc)"

.PP
ALARM A Event Callback in non blocking mode 
.PP
\fB注解\fP
.RS 4
This function is called when RTC_ALARM interrupt took place, inside RTC_ALARM_IRQHandler()\&. It makes a direct call to \fBHAL_IncTick()\fP to increment a global variable 'uwTick' used as application time base\&. 
.RE
.PP
\fB参数\fP
.RS 4
\fIhrtc\fP RTC handle 
.RE
.PP
\fB返回值\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 251 行定义\&.
.SS "void HAL_SuspendTick (void)"

.PP
Suspend Tick increment\&. 
.PP
\fB注解\fP
.RS 4
Disable the tick increment by disabling RTC ALARM interrupt\&. 
.RE
.PP
\fB返回值\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 218 行定义\&.
.SS "void RTC_Alarm_IRQHandler (void)"

.PP
This function handles RTC ALARM interrupt request\&. 
.PP
\fB返回值\fP
.RS 4
\fINone\fP 
.RE
.PP

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 283 行定义\&.
.SH "变量说明"
.PP 
.SS "\fBRTC_HandleTypeDef\fP hRTC_Handle"

.PP
在文件 stm32f4xx_hal_timebase_rtc_alarm_template\&.c 第 81 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
