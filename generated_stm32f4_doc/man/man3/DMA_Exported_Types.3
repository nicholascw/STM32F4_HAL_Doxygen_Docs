.TH "DMA_Exported_Types" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DMA_Exported_Types \- DMA Exported Types  

.SH SYNOPSIS
.br
.PP
.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBDMA_InitTypeDef\fP"
.br
.RI "DMA Configuration Structure definition "
.ti -1c
.RI "struct \fB__DMA_HandleTypeDef\fP"
.br
.RI "DMA handle Structure definition "
.in -1c
.SS "类型定义"

.in +1c
.ti -1c
.RI "typedef struct \fB__DMA_HandleTypeDef\fP \fBDMA_HandleTypeDef\fP"
.br
.RI "DMA handle Structure definition "
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBHAL_DMA_StateTypeDef\fP { \fBHAL_DMA_STATE_RESET\fP = 0x00U, \fBHAL_DMA_STATE_READY\fP = 0x01U, \fBHAL_DMA_STATE_BUSY\fP = 0x02U, \fBHAL_DMA_STATE_TIMEOUT\fP = 0x03U, \fBHAL_DMA_STATE_ERROR\fP = 0x04U, \fBHAL_DMA_STATE_ABORT\fP = 0x05U }"
.br
.RI "HAL DMA State structures definition "
.ti -1c
.RI "enum \fBHAL_DMA_LevelCompleteTypeDef\fP { \fBHAL_DMA_FULL_TRANSFER\fP = 0x00U, \fBHAL_DMA_HALF_TRANSFER\fP = 0x01U }"
.br
.RI "HAL DMA Error Code structure definition "
.ti -1c
.RI "enum \fBHAL_DMA_CallbackIDTypeDef\fP { \fBHAL_DMA_XFER_CPLT_CB_ID\fP = 0x00U, \fBHAL_DMA_XFER_HALFCPLT_CB_ID\fP = 0x01U, \fBHAL_DMA_XFER_M1CPLT_CB_ID\fP = 0x02U, \fBHAL_DMA_XFER_M1HALFCPLT_CB_ID\fP = 0x03U, \fBHAL_DMA_XFER_ERROR_CB_ID\fP = 0x04U, \fBHAL_DMA_XFER_ABORT_CB_ID\fP = 0x05U, \fBHAL_DMA_XFER_ALL_CB_ID\fP = 0x06U }"
.br
.RI "HAL DMA Error Code structure definition "
.in -1c
.SH "详细描述"
.PP 
DMA Exported Types 


.SH "类型定义说明"
.PP 
.SS "typedef struct \fB__DMA_HandleTypeDef\fP \fBDMA_HandleTypeDef\fP"

.PP
DMA handle Structure definition 
.SH "枚举类型说明"
.PP 
.SS "enum \fBHAL_DMA_CallbackIDTypeDef\fP"

.PP
HAL DMA Error Code structure definition 
.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIHAL_DMA_XFER_CPLT_CB_ID \fP\fP
Full transfer 
.br
 
.TP
\fB\fIHAL_DMA_XFER_HALFCPLT_CB_ID \fP\fP
Half Transfer 
.br
 
.TP
\fB\fIHAL_DMA_XFER_M1CPLT_CB_ID \fP\fP
M1 Full Transfer 
.br
 
.TP
\fB\fIHAL_DMA_XFER_M1HALFCPLT_CB_ID \fP\fP
M1 Half Transfer 
.br
 
.TP
\fB\fIHAL_DMA_XFER_ERROR_CB_ID \fP\fP
Error 
.br
 
.TP
\fB\fIHAL_DMA_XFER_ABORT_CB_ID \fP\fP
Abort 
.br
 
.TP
\fB\fIHAL_DMA_XFER_ALL_CB_ID \fP\fP
All 
.br
 
.PP
在文件 stm32f4xx_hal_dma\&.h 第 125 行定义\&.
.SS "enum \fBHAL_DMA_LevelCompleteTypeDef\fP"

.PP
HAL DMA Error Code structure definition 
.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIHAL_DMA_FULL_TRANSFER \fP\fP
Full transfer 
.br
 
.TP
\fB\fIHAL_DMA_HALF_TRANSFER \fP\fP
Half Transfer 
.br
 
.PP
在文件 stm32f4xx_hal_dma\&.h 第 116 行定义\&.
.SS "enum \fBHAL_DMA_StateTypeDef\fP"

.PP
HAL DMA State structures definition 
.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIHAL_DMA_STATE_RESET \fP\fP
DMA not yet initialized or disabled 
.TP
\fB\fIHAL_DMA_STATE_READY \fP\fP
DMA initialized and ready for use 
.br
 
.TP
\fB\fIHAL_DMA_STATE_BUSY \fP\fP
DMA process is ongoing 
.br
 
.TP
\fB\fIHAL_DMA_STATE_TIMEOUT \fP\fP
DMA timeout state 
.br
 
.TP
\fB\fIHAL_DMA_STATE_ERROR \fP\fP
DMA error state 
.br
 
.TP
\fB\fIHAL_DMA_STATE_ABORT \fP\fP
DMA Abort state 
.br
 
.PP
在文件 stm32f4xx_hal_dma\&.h 第 103 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
