.TH "UART_InitTypeDef" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UART_InitTypeDef \- UART Init Structure definition  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <stm32f4xx_hal_uart\&.h>\fP
.SS "成员变量"

.in +1c
.ti -1c
.RI "uint32_t \fBBaudRate\fP"
.br
.ti -1c
.RI "uint32_t \fBWordLength\fP"
.br
.ti -1c
.RI "uint32_t \fBStopBits\fP"
.br
.ti -1c
.RI "uint32_t \fBParity\fP"
.br
.ti -1c
.RI "uint32_t \fBMode\fP"
.br
.ti -1c
.RI "uint32_t \fBHwFlowCtl\fP"
.br
.ti -1c
.RI "uint32_t \fBOverSampling\fP"
.br
.in -1c
.SH "详细描述"
.PP 
UART Init Structure definition 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 47 行定义\&.
.SH "结构体成员变量说明"
.PP 
.SS "uint32_t BaudRate"
This member configures the UART communication baud rate\&. The baud rate is computed using the following formula:
.IP "\(bu" 2
IntegerDivider = ((PCLKx) / (8 * (OVR8+1) * (huart->Init\&.BaudRate)))
.IP "\(bu" 2
FractionalDivider = ((IntegerDivider - ((uint32_t) IntegerDivider)) * 8 * (OVR8+1)) + 0\&.5 Where OVR8 is the 'oversampling by 8 mode' configuration bit in the CR1 register\&. 
.PP

.PP
在文件 stm32f4xx_hal_uart\&.h 第 49 行定义\&.
.SS "uint32_t HwFlowCtl"
Specifies whether the hardware flow control mode is enabled or disabled\&. This parameter can be a value of \fBUART Hardware Flow Control\fP 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 71 行定义\&.
.SS "uint32_t Mode"
Specifies whether the Receive or Transmit mode is enabled or disabled\&. This parameter can be a value of \fBUART Transfer Mode\fP 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 68 行定义\&.
.SS "uint32_t OverSampling"
Specifies whether the Over sampling 8 is enabled or disabled, to achieve higher speed (up to fPCLK/8)\&. This parameter can be a value of \fBUART Over Sampling\fP 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 74 行定义\&.
.SS "uint32_t Parity"
Specifies the parity mode\&. This parameter can be a value of \fBUART Parity\fP 
.PP
\fB注解\fP
.RS 4
When parity is enabled, the computed parity is inserted at the MSB position of the transmitted data (9th bit when the word length is set to 9 data bits; 8th bit when the word length is set to 8 data bits)\&. 
.RE
.PP

.PP
在文件 stm32f4xx_hal_uart\&.h 第 61 行定义\&.
.SS "uint32_t StopBits"
Specifies the number of stop bits transmitted\&. This parameter can be a value of \fBUART Number of Stop Bits\fP 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 58 行定义\&.
.SS "uint32_t WordLength"
Specifies the number of data bits transmitted or received in a frame\&. This parameter can be a value of \fBUART Word Length\fP 
.PP
在文件 stm32f4xx_hal_uart\&.h 第 55 行定义\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
