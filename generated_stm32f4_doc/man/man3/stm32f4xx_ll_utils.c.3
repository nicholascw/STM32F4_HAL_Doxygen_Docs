.TH "src/stm32f4xx_ll_utils.c" 3 "2020年 八月 7日 星期五" "Version 1.24.0" "STM32F4_HAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/stm32f4xx_ll_utils.c \- UTILS LL module driver\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32f4xx_ll_utils\&.h'\fP
.br
\fC#include 'stm32f4xx_ll_rcc\&.h'\fP
.br
\fC#include 'stm32f4xx_ll_system\&.h'\fP
.br
\fC#include 'stm32f4xx_ll_pwr\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBassert_param\fP(expr)   ((void)0U)"
.br
.ti -1c
.RI "#define \fBUTILS_MAX_FREQUENCY_SCALE2\fP   RCC_MAX_FREQUENCY_SCALE2"
.br
.ti -1c
.RI "#define \fBUTILS_PLLVCO_INPUT_MIN\fP   RCC_PLLVCO_INPUT_MIN"
.br
.ti -1c
.RI "#define \fBUTILS_PLLVCO_INPUT_MAX\fP   RCC_PLLVCO_INPUT_MAX"
.br
.ti -1c
.RI "#define \fBUTILS_PLLVCO_OUTPUT_MIN\fP   RCC_PLLVCO_OUTPUT_MIN"
.br
.ti -1c
.RI "#define \fBUTILS_PLLVCO_OUTPUT_MAX\fP   RCC_PLLVCO_OUTPUT_MAX"
.br
.ti -1c
.RI "#define \fBUTILS_HSE_FREQUENCY_MIN\fP   4000000U"
.br
.ti -1c
.RI "#define \fBUTILS_HSE_FREQUENCY_MAX\fP   26000000U"
.br
.ti -1c
.RI "#define \fBUTILS_SCALE2_LATENCY1_FREQ\fP   FLASH_SCALE2_LATENCY1_FREQ"
.br
.ti -1c
.RI "#define \fBUTILS_SCALE2_LATENCY2_FREQ\fP   FLASH_SCALE2_LATENCY2_FREQ"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_SYSCLK_DIV\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_APB1_DIV\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_APB2_DIV\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLLM_VALUE\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLLN_VALUE\fP(__VALUE__)   ((RCC_PLLN_MIN_VALUE <= (__VALUE__)) && ((__VALUE__) <= RCC_PLLN_MAX_VALUE))"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLLP_VALUE\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLLVCO_INPUT\fP(__VALUE__)   ((\fBUTILS_PLLVCO_INPUT_MIN\fP <= (__VALUE__)) && ((__VALUE__) <= \fBUTILS_PLLVCO_INPUT_MAX\fP))"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLLVCO_OUTPUT\fP(__VALUE__)   ((\fBUTILS_PLLVCO_OUTPUT_MIN\fP <= (__VALUE__)) && ((__VALUE__) <= \fBUTILS_PLLVCO_OUTPUT_MAX\fP))"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_PLL_FREQUENCY\fP(__VALUE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_HSE_BYPASS\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_LL_UTILS_HSE_FREQUENCY\fP(__FREQUENCY__)   (((__FREQUENCY__) >= \fBUTILS_HSE_FREQUENCY_MIN\fP) && ((__FREQUENCY__) <= \fBUTILS_HSE_FREQUENCY_MAX\fP))"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "static uint32_t \fBUTILS_GetPLLOutputFrequency\fP (uint32_t PLL_InputFrequency, \fBLL_UTILS_PLLInitTypeDef\fP *UTILS_PLLInitStruct)"
.br
.RI "Function to check that PLL can be modified "
.ti -1c
.RI "static ErrorStatus \fBUTILS_SetFlashLatency\fP (uint32_t HCLK_Frequency)"
.br
.RI "Update number of Flash wait states in line with new frequency and current voltage range\&. "
.ti -1c
.RI "static ErrorStatus \fBUTILS_EnablePLLAndSwitchSystem\fP (uint32_t SYSCLK_Frequency, \fBLL_UTILS_ClkInitTypeDef\fP *UTILS_ClkInitStruct)"
.br
.RI "Function to enable PLL and switch system clock to PLL "
.ti -1c
.RI "static ErrorStatus \fBUTILS_PLL_IsBusy\fP (void)"
.br
.RI "Function to check that PLL can be modified "
.ti -1c
.RI "void \fBLL_Init1msTick\fP (uint32_t HCLKFrequency)"
.br
.RI "This function configures the Cortex-M SysTick source to have 1ms time base\&. "
.ti -1c
.RI "void \fBLL_mDelay\fP (uint32_t Delay)"
.br
.RI "This function provides accurate delay (in milliseconds) based on SysTick counter flag "
.ti -1c
.RI "void \fBLL_SetSystemCoreClock\fP (uint32_t HCLKFrequency)"
.br
.RI "This function sets directly SystemCoreClock CMSIS variable\&. "
.ti -1c
.RI "ErrorStatus \fBLL_PLL_ConfigSystemClock_HSI\fP (\fBLL_UTILS_PLLInitTypeDef\fP *UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP *UTILS_ClkInitStruct)"
.br
.RI "This function configures system clock at maximum frequency with HSI as clock source of the PLL "
.ti -1c
.RI "ErrorStatus \fBLL_PLL_ConfigSystemClock_HSE\fP (uint32_t HSEFrequency, uint32_t HSEBypass, \fBLL_UTILS_PLLInitTypeDef\fP *UTILS_PLLInitStruct, \fBLL_UTILS_ClkInitTypeDef\fP *UTILS_ClkInitStruct)"
.br
.RI "This function configures system clock with HSE as clock source of the PLL "
.in -1c
.SH "详细描述"
.PP 
UTILS LL module driver\&. 


.PP
\fB作者\fP
.RS 4
MCD Application Team 
.RE
.PP
\fB注意\fP
.RS 4
.RE
.PP
.SS "(C) Copyright (c) 2017 STMicroelectronics\&. All rights reserved\&."
.PP
This software component is licensed by ST under BSD 3-Clause license, the 'License'; You may not use this file except in compliance with the License\&. You may obtain a copy of the License at: opensource\&.org/licenses/BSD-3-Clause 
.PP
在文件 \fBstm32f4xx_ll_utils\&.c\fP 中定义\&.
.SH "宏定义说明"
.PP 
.SS "#define assert_param(expr)   ((void)0U)"

.PP
在文件 stm32f4xx_ll_utils\&.c 第 28 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 STM32F4_HAL 的 源代码自动生成\&.
